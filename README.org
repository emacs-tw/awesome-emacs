#+HTML:<div align=center><a href="https://github.com/emacs-tw/awesome-emacs"><img alt="Emacs Logo" width="240" height="240" src="https://upload.wikimedia.org/wikipedia/commons/0/08/EmacsIcon.svg"></a>

* Awesome Emacs
[[https://github.com/sindresorhus/awesome][https://cdn.jsdelivr.net/gh/sindresorhus/awesome@d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg]] [[https://github.com/emacs-tw/awesome-emacs/actions/workflows/main.yml][https://github.com/emacs-tw/awesome-emacs/actions/workflows/main.yml/badge.svg]] [[https://unlicense.org][https://upload.wikimedia.org/wikipedia/commons/e/ee/Unlicense_Blue_Badge.svg]]

#+HTML:</div>

Welcome to Awesome Emacs, a community-driven list of useful Emacs packages, utilities, and libraries. Most of the following packages are available in [[https://github.com/melpa/melpa][MELPA]]. We recommend installing packages with it.

Also, please do consider contributing back to the Emacs community. One major way is by financially sponsoring the lead developers and teams of developers that create and maintain the wonderful Emacs packages that so many of us use. [[https://github.com/tarsius/elisp-maintainers][Elisp Maintainers]] provides a fantastic collection of ways that one can donate to several prolific Emacs package developers. Please do so donate.

Above all, enjoy using Emacs. The community, more than anything, makes Emacs a great ecosystem and place to develop, learn and grow.

* Table of Contents                                                     :TOC_5:QUOTE:
#+BEGIN_QUOTE
- [[#awesome-emacs][Awesome Emacs]]
  - [[#installation][Installation]]
    - [[#linux][Linux]]
    - [[#macos][macOS]]
    - [[#windows][Windows]]
    - [[#alternative][Alternative]]
  - [[#interface-enhancement][Interface Enhancement]]
    - [[#window--frame-management][Window & Frame Management]]
      - [[#font][Font]]
      - [[#layout][Layout]]
      - [[#switching][Switching]]
    - [[#tabbar][Tabbar]]
    - [[#navigation][Navigation]]
    - [[#key-bindings][Key-bindings]]
    - [[#minibuffer][Minibuffer]]
      - [[#fuzzy--narrowing][Fuzzy & Narrowing]]
    - [[#mode-line][Mode-line]]
    - [[#dim-distracting][Dim Distracting]]
  - [[#editing-enhancement][Editing Enhancement]]
    - [[#indentation-enhancement][Indentation Enhancement]]
    - [[#symbols--tokens][Symbols / Tokens]]
    - [[#whitespaces-enhancement][Whitespaces Enhancement]]
    - [[#delete-enhancement][Delete Enhancement]]
    - [[#fancy-icons][Fancy Icons]]
    - [[#massive-edit][Massive Edit]]
    - [[#quotes--parenthesis--delimiters-handling][Quotes & Parenthesis & Delimiters Handling]]
      - [[#insert--edit][Insert & Edit]]
      - [[#select][Select]]
      - [[#highlight][Highlight]]
    - [[#kill-ring--clipboard][Kill-ring / Clipboard]]
    - [[#drag-lines][Drag Lines]]
    - [[#undo--redo][Undo & Redo]]
    - [[#multiple-major-mode][Multiple Major-Mode]]
    - [[#snippet][Snippet]]
    - [[#text-conversion][Text Conversion]]
  - [[#programming][Programming]]
    - [[#completion][Completion]]
    - [[#jump-to-definition--tagging][Jump to Definition / Tagging]]
    - [[#lsp-client][LSP Client]]
    - [[#debugging][Debugging]]
    - [[#error-checking][Error Checking]]
    - [[#document][Document]]
    - [[#code-folding][Code Folding]]
    - [[#compiling][Compiling]]
  - [[#project-management][Project management]]
  - [[#file-manager][File Manager]]
  - [[#programming-language][Programming Language]]
    - [[#cc][C/C++]]
    - [[#python][Python]]
    - [[#ruby][Ruby]]
    - [[#lisp-family][Lisp Family]]
      - [[#common-lisp][Common Lisp]]
      - [[#scheme][Scheme]]
      - [[#racket][Racket]]
      - [[#clojure][Clojure]]
      - [[#emacs-lisp][Emacs Lisp]]
    - [[#web-development][Web Development]]
      - [[#javascript][JavaScript]]
        - [[#coffeescript][CoffeeScript]]
        - [[#typescript][TypeScript]]
        - [[#purescript][PureScript]]
      - [[#php][PHP]]
    - [[#java][Java]]
    - [[#go][Go]]
    - [[#c][C#]]
    - [[#rust][Rust]]
    - [[#erlang][Erlang]]
    - [[#elixir][Elixir]]
    - [[#haskell][Haskell]]
    - [[#swift][Swift]]
    - [[#scala][Scala]]
    - [[#lua][Lua]]
    - [[#makefile][Makefile]]
    - [[#sml][SML]]
    - [[#gdscript][Gdscript]]
    - [[#groovy][Groovy]]
    - [[#kotlin][Kotlin]]
    - [[#r][R]]
    - [[#julia][Julia]]
    - [[#ocaml][OCaml]]
    - [[#reasonml][ReasonML]]
    - [[#mint][Mint]]
    - [[#nim][Nim]]
    - [[#d][D]]
    - [[#raku][Raku]]
    - [[#elm][Elm]]
    - [[#stan][Stan]]
    - [[#mips-assembly][MIPS Assembly]]
    - [[#risc-v-assembly][RISC-V Assembly]]
    - [[#verilogsystemverilog][Verilog/SystemVerilog]]
    - [[#vhdl][VHDL]]
    - [[#lammps][LAMMPS]]
    - [[#ada][Ada]]
  -  [[#ai][AI]]
    - [[#code-completion][Code Completion]]
    - [[#chatgpt][ChatGPT]]
    - [[#ai-assistant-programming][AI assistant programming]]
  - [[#session-management][Session management]]
  - [[#keys-cheat-sheet][Keys Cheat Sheet]]
  - [[#note][Note]]
    - [[#org-mode][Org-mode]]
  - [[#version-control][Version control]]
  - [[#integration][Integration]]
    - [[#console][Console]]
    - [[#operating-system][Operating System]]
    - [[#search][Search]]
      - [[#ack][Ack]]
      - [[#ag][Ag]]
      - [[#pt][Pt]]
      - [[#sift][Sift]]
      - [[#ripgrep][Ripgrep]]
    - [[#pastebin][Pastebin]]
    - [[#google][Google]]
    - [[#blog-system][Blog System]]
  - [[#markdown][Markdown]]
  - [[#latex][LaTeX]]
  - [[#pdf][PDF]]
  - [[#internet][Internet]]
    - [[#browser][Browser]]
    - [[#mail][Mail]]
    - [[#irc][IRC]]
    - [[#chat][Chat]]
    - [[#social-network][Social Network]]
    - [[#web-feed][Web Feed]]
    - [[#ftp][FTP]]
    - [[#torrent][Torrent]]
  - [[#devops][DevOps]]
  - [[#package-management][Package Management]]
    - [[#package-manager][Package Manager]]
    - [[#package-configuration][Package Configuration]]
    - [[#package-updates][Package Updates]]
  - [[#config-management][Config Management]]
  - [[#library][Library]]
  - [[#theme][Theme]]
  - [[#multimedia][Multimedia]]
  - [[#finance][Finance]]
  - [[#fun][Fun]]
  - [[#music][Music]]
  - [[#screencasting][Screencasting]]
  - [[#starter-kit][Starter Kit]]
  - [[#tutorials][Tutorials]]
  - [[#links-and-resources][Links and resources]]
- [[#contributing][Contributing]]
  - [[#the-order-of-items][The Order of Items]]
  - [[#emacs-built-in-packages][Emacs Built-In Packages]]
  - [[#generate-table-of-contents][Generate "Table of Contents"]]
- [[#other-awesome-lists][Other Awesome Lists]]
- [[#license][License]]
#+END_QUOTE

** Installation
   Much information can be found at the [[https://www.gnu.org/savannah-checkouts/gnu/emacs/download.html][GNU Emacs Download & Installation]] page. Upgrading to the newest/current version of emacs (if emacs comes preinstalled on ones operating system) will give the best user experience, and it is advised to do so as soon as possible. Here are several resources to assist you as you start or continue your journey with emacs.

*** Linux
    Use your favorite Linux package manager (e.g. apt, dnf, yum, pacman, etc) or build from [[https://git.savannah.gnu.org/cgit/emacs.git/][source]]. Typically, either a relatively recent version of emacs or no instance of emacs will be on a default install of one's Linux [[https://distrowatch.com][distribution]].

*** macOS
    Use [[https://brew.sh][Homebrew]] or [[https://www.macports.org][MacPorts]] to install emacs with a package manager. Also, consider [[https://emacsformacosx.com][Emacs for Mac OS X]] and the Homebrew [[https://github.com/d12frosted/homebrew-emacs-plus][Emacs Plus]] formula for installation candidates. The preinstalled version of emacs on a default macOS install is quite [[https://apple.stackexchange.com/questions/229669/update-emacs-that-comes-with-os-x][old]]. For an optimal emacs experience, upgrading to a newer version is highly recommended.

*** Windows
    Emacs can be downloaded from the [[http://ftp.gnu.org/gnu/emacs/windows/][GNU FTP]] or a GNU mirror listed on the [[https://www.gnu.org/software/emacs/download.html][GNU Emacs Download & Installation page]], and/or using the [[https://www.msys2.org][MSYS2]] pacman manager. Another option is to install emacs via the [[https://community.chocolatey.org/packages/Emacs][Chocolatey]] or [[https://github.com/ScoopInstaller/Extras/blob/master/bucket/emacs.json][scoop]] Windows package managers. A default install of Windows does not contain emacs.

*** Alternative
    The following resources can be used to build emacs in various environments-- e.g. containerized [[https://www.docker.com][docker]] builds, [[https://en.wikipedia.org/wiki/Continuous_integration][continuous integration]], building various versions of emacs, etc.
    - [[https://github.com/rejeep/evm][evm]] - Emacs Version Manager.
    - [[https://github.com/flycheck/emacs-travis][flycheck/emacs-travis]] - Install emacs on Travis CI.
      - [[https://github.com/npostavs/emacs-travis][npostavs/emacs-travis]] - Pre-built emacs binaries for Travis CI (fork of flycheck/emacs-travis, significant though in that it is used for CI in projects such as Magit).
    - [[https://github.com/Silex/docker-emacs][Silex/docker-emacs]] - Run emacs in docker containers (multiple image variants, with options for [[https://ubuntu.com][Ubuntu]] or [[https://alpinelinux.org][Alpine]] Linux based images).
    - [[https://github.com/JAremko/docker-emacs][JAremko/docker-emacs]] - Dockerized emacs with GUI (Mac, Windows, GNU/Linux and your browser).
    - [[https://github.com/purcell/nix-emacs-ci][nix-emacs-ci]] - Emacs installations for continuous integration.

** Interface Enhancement

   # ATTENTION IF YOU ARE CONTRIBUTOR: This parent category "Interface
   # Enhancement" is frequently abused. Please DO NOT casually place
   # packages in this parent category, unless the package indeed does not
   # belong to any other subcategory or other category.

   # Packages in this category enhance the UI of Emacs itself, NOT
   # related with file's content.

   - [[https://github.com/emacs-dashboard/emacs-dashboard][Dashboard]] - A startup dashboard which provides certain information about your recent Emacs activities.
   - [[https://github.com/Wilfred/helpful][Helpful]] - An enchancement of the Emacs built-in help system.
   - [[https://github.com/zk-phi/sublimity][sublimity]] - smooth-scrolling, minimap inspired by the sublime editor.
   - [[https://github.com/pashinin/workgroups2][workgroups2]] - Session manager, saves all your opened buffers, their location and sizes on disk to restore later.
   - [[https://github.com/mrkkrp/ace-popup-menu][ace-popup-menu]] - Replace GUI popup menu with something more efficient.
   - [[https://www.gnu.org/software/hyperbole/][GNU Hyperbole]] - GNU Hyperbole is an efficient and programmable hypertextual information management system. It is a toolkit and user interface for viewing, retrieving and interlinking all kinds of textual information.
   - [[https://github.com/coldnew/linum-relative][linum-relative]] - display relative line number in the left margin in emacs.
   - [[https://github.com/Malabarba/beacon][beacon]] - Never lose your cursor again.
   - [[https://github.com/protesilaos/pulsar][pulsar]] - Highlights current line, an minimal alternative to beacon.
   - [[https://github.com/emacsorphanage/yascroll][yascroll-el]] - Yet Another Scroll Bar Mode.
   - [[https://github.com/k-talo/volatile-highlights.el][volatile-highlights.el]] - Minor mode for visual feedback on some operations in Emacs.
   - [[https://codeberg.org/ideasman42/emacs-buffer-name-relative][buffer-name-relative]] - Project relative buffer names with optional path abbreviation.
   - [[https://github.com/ichernyshovvv/enlight][enlight]] — Highly customizable startup screen for Emacs.

*** Window & Frame Management
    #+begin_quote
    The window & frame system of Emacs itself, NOT the window system of OS (See "[[#operating-system][Operating System]]").
    #+end_quote

**** Font

   - [[https://github.com/protesilaos/fontaine][fontaine]] - lets the user specify presets of font configurations and set them on demand on graphical Emacs frames.
   - [[https://codeberg.org/ideasman42/emacs-default-font-presets][default-font-presets]] - lets user specify presets for the default-font, with utilities to scale and cycle fonts.

**** Layout
   - [[https://www.emacswiki.org/emacs/WinnerMode][winner]] - =[built-in]= "Undo"(and "redo") changes in the window configuration with the key commands.
   - [[https://github.com/knu/elscreen][ElScreen]] - Utility for multiple screens.
   - [[https://github.com/cyrus-and/zoom][Zoom]] - Fixed and automatic balanced window layout for Emacs.

**** Switching
   - [[https://www.emacswiki.org/emacs/WindMove][windmove]] - =[built-in]= Tired with =C-x o=? Now you can use =shift+arrows= to jump between windows.
   - [[https://github.com/deb0ch/emacs-winum][emacs-winum]] - Window numbers for Emacs - Navigate windows and frames using numbers.
   - [[https://github.com/dimitri/switch-window][switch-window]] - A visual replacement for =C-x o=.
   - [[https://github.com/abo-abo/ace-window][ace-window]] - Quickly switch windows.
   - [[https://github.com/lukhas/buffer-move][buffer-move]] - Move or swap buffer to other window.

*** Tabbar

   - [[https://www.emacswiki.org/emacs/TabBarMode][tab-bar-mode]] - =[built-in]= =tab-bar-mode= and =tab-line-mode= to display a tab bar at the top.
   - [[https://github.com/dholm/tabbar][tabbar]] - Display a tab bar in the header line.
   - [[https://github.com/manateelazycat/awesome-tab][awesome-tab]] - Out of box extension to use tab in Emacs. grouping buffers by projects and many awesome features.
   - [[https://github.com/ema2159/centaur-tabs][centaur-tabs]] - Aesthetic, functional tabs plugin with icons and styles, Helm, Ivy and Projectile integration, supported by many popular themes.
   - [[https://github.com/jamescherti/vim-tab-bar.el][vim-tab-bar]] - Makes Emacs' built-in tab-bar look like Vim's tabbed browsing interface.


*** Navigation

    - [[https://github.com/winterTTr/ace-jump-mode][Ace jump]] - A quick cursor jump mode.
    - [[https://github.com/emacs-vs/goto-line-preview][goto-line-preview]] - Preview line when executing =goto-line= command.
    - [[https://github.com/abo-abo/avy][Avy]] - Jump to visible text using a char-based decision tree.
      - [[https://github.com/cute-jumper/avy-zap][avy-zap]] - Zap to char using avy.
    - [[https://github.com/doitian/iy-go-to-char][iy-go-to-char]] - Go to next CHAR which is similar to "f" and "t" in vim, works well with Multiple Cursors.
    - [[https://github.com/camdez/goto-last-change.el][goto-last-change]] - Move point through buffer-undo-list positions.
    - [[https://github.com/emacsorphanage/helm-swoop][Helm-swoop]] - Efficiently jump between matched string/lines.
    - [[https://github.com/radian-software/ctrlf][CTRLF]] - An intuitive and efficient solution for single-buffer text search in Emacs.
    - [[https://github.com/emacsorphanage/anzu][anzu]] - displays current match and total matches.
    - [[https://www.emacswiki.org/emacs/ImenuMode][imenu]] - =[built-in]= Menus for accessing locations in documents.
    - [[https://github.com/vspinu/imenu-anywhere][imenu-anywhere]] - IDO/Helm imenu tag selection across all buffers with the same mode.
    - [[https://www.emacswiki.org/emacs/MiniMap][Minimap]] - A SublimeText-style minimap sidebar.
    - [[https://github.com/abo-abo/ace-link][ace-link]] - Quickly follow links in =org-mode=, =help-mode=, =Info-mode=, and several other modes.
    - [[https://github.com/rolandwalker/back-button][back-button]] - Visual navigation through mark rings.
    - [[https://github.com/joodland/bm][bm]] - Visual Bookmarks, provides an easy way to navigate in a buffer.
    - [[https://github.com/aki2o/emacs-pophint][emacs-pophint]] - Provide navigation like the Vimperator/KeySnail Hint Mode of Firefox.
    - [[https://github.com/noctuid/vertigo.el][vertigo.el]] - Jump lines using the home row.
    - [[https://github.com/nixin72/block-nav.el][block-nav]] - Navigate by indentation block levels.
    - [[https://codeberg.org/ideasman42/emacs-spatial-navigate][emacs-spatial-navigate]] - Navigate by indentation and whitespace blocks.
    - [[https://github.com/alezost/mwim.el][mwim]] - Toggle point between line positions of interest.
    - [[https://github.com/tanrax/scroll-page-without-moving-point.el][scroll-page-without-moving-point]] - Move the scroll in Emacs without moving the position cursor.
    - [[https://gitlab.com/Vonfry/zoxide.el][zoxide]] - A smarter cd command for Emacs.

*** Key-bindings
    #+BEGIN_QUOTE
    Possibly help prevent keyboard-related repetitive strain injury (RSI) from occurring.
    #+END_QUOTE
    - [[https://github.com/emacs-evil/evil][Evil]] - An *e* xtensible *vi* *l* ayer: manipulate Emacs with Vi key binding.
      - [[https://github.com/emacs-evil/evil-collection][Evil Collection]] - A collection of Evil bindings.
      - [[https://github.com/emacs-evil/evil-ediff][Evil Ediff]] - Evil bindings for Ediff.
      - [[https://github.com/emacs-evil/evil-magit][Evil Magit]] - Evil bindings for Magit.
      - [[https://github.com/JorisE/evil-mu4e][Evil mu4e]] - Evil bindings for mu4e.
      - [[https://github.com/noctuid/lispyville][LispyVille]] - Evil bindings for lispy-mode.
    - [[https://github.com/abo-abo/hydra][Hydra]] - Make bindings that stick around.
    - [[https://github.com/emacsorphanage/god-mode][god-mode]] - Global minor mode for entering Emacs commands without modifier keys.
    - [[https://github.com/meow-edit/meow][meow]] - Yet another modal editing on Emacs.
    - [[https://github.com/mrkkrp/modalka][modalka]] - Introduce native modal editing of your own design.
    - [[https://github.com/Kungsgeten/ryo-modal][ryo-modal]] - Inspired by modalka, ryo-modal provides useful features for creating your own modal editing environment.
    - [[https://gitlab.com/matsievskiysv/multistate][multistate]] - Use Evil-like binding states without predefined keybindings (Evil mode without vi).
    - [[https://github.com/xahlee/xah-fly-keys][xah-fly-keys]] - A modal keybinding for emacs (like vim), but based on command frequency and ergonomics.
    - [[https://github.com/ergoemacs/ergoemacs-mode][ergoemacs-mode]] - Global minor mode to use both common interface keys and ergonomic keys for emacs.
    - [[https://github.com/noctuid/general.el][general]] - A convenient, unified interface for key definitions - like use-package but for key-bindings.

*** Minibuffer

   - [[https://www.emacswiki.org/emacs/InteractivelyDoThings][IDO]] - =[built-in]= Interactively do things with buffers and files.
     - [[https://github.com/DarwinAwardWinner/ido-completing-read-plus][ido-completing-read+]] - Enhance the built-in ido for completion all over Emacs.
     - [[https://github.com/creichert/ido-vertical-mode.el][ido-vertical-mode]] - Make ido display vertically.
   - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Icomplete.html][Icomplete]] - =[built-in]= See the list of candidates while completing for any command. Can be made to behave more like Ido with `M-x fido-mode`.
     - [[https://github.com/oantolin/icomplete-vertical][icomplete-vertical]] - Make Icomplete display vertically.
   - [[https://github.com/emacs-helm/helm][Helm]] - (Formerly 'Anything') A powerful completion and selection narrowing framework. ( External Guides [[http://tuhdo.github.io/helm-intro.html][1]] )
   - [[https://github.com/abo-abo/swiper][Ivy]] - flexible, simple tools for minibuffer completion in Emacs.
     - Ivy, a generic completion mechanism for Emacs.
     - Counsel, a collection of Ivy-enhanced versions of common Emacs commands.
     - Swiper, an Ivy-enhanced alternative to isearch.
   - [[https://www.emacswiki.org/emacs/Icicles][Icicles]] - An Emacs library that enhances minibuffer completion.
   - [[https://github.com/nonsequitur/smex/][smex]] - A smart M-x enhancement for Emacs.
   - [[https://github.com/DarwinAwardWinner/amx][amx]] - An alternative M-x interface for Emacs.
   - [[https://github.com/minad/vertico][vertico]] - Vertico provides a minimalistic vertical completion UI, which is based on the default completion system.
     - [[https://github.com/minad/marginalia][marginalia]] - Show document of function in ==M-x=, or file attributes in =C-x C-f=.
   - [[https://github.com/minad/consult][consult]] - Consult provides various practical commands based on the Emacs completion function completing-read.

**** Fuzzy & Narrowing
     #+begin_quote
     Tools or libraries specially focused on fuzzy searching in list, mostly for minibuffer.
     #+end_quote

    - [[https://github.com/radian-software/prescient.el][prescient.el]] - Fast and intuitive frequency-and-recency-based sorting and filtering for Emacs.
    - [[https://github.com/oantolin/orderless][Orderless]] - Use space-separated search terms in any order when completing with Icomplete or the default interface.
    - [[https://github.com/manateelazycat/snails][Snails]] - A modern, easy-to-expand fuzzy search framework.
    - [[https://github.com/radian-software/selectrum][selectrum]] - Clean, stable, and intuitive incremental narrowing framework for Emacs. [Deprecated. The project suggests using Vertico]

*** Mode-line
   - [[https://github.com/milkypostman/powerline][powerline]] - Emacs version of the Vim powerline.
     - [[https://github.com/johnson-christopher/powerline-evil][powerline-evil]] - Utilities for better Evil support for Powerline.
   - [[https://github.com/Malabarba/smart-mode-line][smart-mode-line]] - A sexy mode-line for Emacs.
   - [[https://github.com/TheBB/spaceline][spaceline]] - Powerline theme from Spacemacs.
   - [[https://github.com/dbordak/telephone-line][telephone-line]] - A new implementation of Powerline for Emacs.
   - [[https://github.com/manateelazycat/awesome-tray][awesome-tray]] - Display mode-line information at right of minibuffer.
   - [[https://github.com/myrjola/diminish.el][diminish]] - Diminished modes are minor modes with no modeline display.
   - [[https://github.com/seagle0128/doom-modeline][doom-modeline]] - A mode-line package included in Doom and Centaur emacs.
   - [[https://github.com/radian-software/blackout][blackout]] - Customize or hide the display of major and minor modes in the mode-line.
   - [[https://codeberg.org/ideasman42/emacs-mode-line-idle][mode-line-idle]] - Evaluate mode-line elements when idle, displaying detailed information without sacrificing performance.

*** Dim Distracting

    - [[https://github.com/gonewest818/dimmer.el][dimmer.el]] - Interactively highlight which buffer is active by dimming the others.
    - [[https://github.com/hlissner/emacs-solaire-mode][Solaire mode]] - Visually distinguish file-visiting windows from other types of windows (like popups or sidebars) by giving them a slightly different background.
    - [[https://github.com/larstvei/Focus][focus]] - Dim the font color of text in surrounding paragraphs.

** Editing Enhancement

   - [[https://github.com/magnars/multifiles.el][multifiles.el]] - View and edit parts of multiple files in one buffer.
   - [[https://github.com/phillord/lentic][lentic]] -  Create views of the same content in two Emacs buffers.
   - [[http://www.lysator.liu.se/~tab/artist/][artist-mode]] - =[built-in]= Draw ASCII lines, squares, rectangles and poly-lines, ellipses, and circles with your mouse and/or keyboard.
   - [[https://github.com/bbatsov/crux][crux]] - A Collection of Ridiculously Useful eXtensions for Emacs.
   - [[https://github.com/jorgenschaefer/typoel][typo.el]] - Emacs extension for typographical editing.
   - [[https://github.com/sulami/literate-calc-mode.el][literate-calc-mode]] - display live =calc= results inline.

*** Indentation Enhancement

    - [[https://github.com/antonj/Highlight-Indentation-for-Emacs][highlight-Indentation-mode]] - Highlight indentation.
    - [[https://github.com/zk-phi/indent-guide][indent-guide]] - Show vertical lines to guide indentation.
    - [[https://github.com/Malabarba/aggressive-indent-mode][Aggressive-indent]] - Keeps your code always indented automatically.

    - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Indent-Convenience.html][electric-indent-mode]] - =[built-in]= (enabled by default) Auto-indent current and new lines ([[https://www.emacswiki.org/emacs/AutoIndentation][Emacs Wiki]])
    - [[https://github.com/DarthFennec/highlight-indent-guides][highlight-indent-guides]] - Highlight indentation.
    - [[https://codeberg.org/ideasman42/emacs-hl-indent-scope][hl-indent-scope]] - Highlight indentation using source-code scope (typically defined by brackets).

*** Symbols / Tokens

    - [[https://github.com/emacsmirror/rainbow-mode][rainbow-mode]] - Colorize color names / color hex code in buffers.
    - [[https://github.com/wolray/symbol-overlay][symbol-overlay]] - Highlight symbols with keymap-enabled overlays (inspired by highlight-symbol).
    - [[https://github.com/nschum/highlight-symbol.el][highlight-symbol]] - Auto/manually highlight the same symbols in code, navigate in them, or replace string.
    - [[https://github.com/fgeller/highlight-thing.el][highlight-thing]] - Light-weight minor mode to highlight thing under point using built-ins.
    - [[https://github.com/ankurdave/color-identifiers-mode][color-identifiers-mode]] - Color Identifiers is a minor mode for Emacs that highlights each source code identifier uniquely based on its name.
    - [[https://codeberg.org/ideasman42/emacs-idle-highlight-mode][idle-highlight-mode]] - Light-weight minor mode to automatically highlight the thing at point when idle, with configurable exceptions & behavior.

*** Whitespaces Enhancement

    - [[https://www.emacswiki.org/emacs/WhiteSpace][whitespace]] - =[built-in]= Visualize blanks (tab/space/newline).
    - [[https://github.com/purcell/whitespace-cleanup-mode][whitespace-cleanup-mode]] - Intelligently call whitespace-cleanup on save.
    - [[https://github.com/lewang/ws-butler][ws-butler]] - Unobtrusively trim extraneous white-space *ONLY* in lines edited.

*** Delete Enhancement

   - [[https://www.emacswiki.org/emacs/DeleteSelectionMode][delete-selection-mode]] - =[built-in]= Auto delete selected region when typing, just like most of other modern text editors.
   - [[https://github.com/soutaro/hungry-delete.el][hungry-delete]] - Delete an entire block of whitespace at point.
   - [[https://github.com/hrehfeld/emacs-smart-hungry-delete][smart-hungry-delete]] -  Delete whitespace between words, parenthesis and other delimiters in a (not very) smart way.
   - [[https://github.com/mrkkrp/zzz-to-char][zzz-to-char]] - Fancy replacement for =zap-to-char=.

*** Fancy Icons

   - [[https://github.com/domtronn/all-the-icons.el][all-the-icons]] - A package used to include fancy icons within emacs.
   - [[https://github.com/rainstormstudio/nerd-icons.el][nerd-icons]] - A Library for Nerd Font icons.
   - [[https://github.com/iqbalansari/emacs-emojify][emojify]] - Display emojis in Emacs.
   - [[https://github.com/ryuslash/mode-icons][mode-icons]] - Show icons instead of mode names.
   - [[https://emacsredux.com/blog/2014/08/25/a-peek-at-emacs-24-dot-4-prettify-symbols-mode/][prettify-symbol-mode]] - =[built-in]= displaying characters as fancy symbols (e.g. =lambda= -> =λ=).

*** Massive Edit

    - [[Https://github.com/magnars/multiple-cursors.el][Multiple cursors]] - Mark, edit multiple lines at once.
    - [[https://github.com/benma/visual-regexp.el][visual-regexp]] - Replace via RegExp, with real-time visual feedback directly in the buffer.
      - [[https://github.com/benma/visual-regexp-steroids.el/][visual-regexp-steroids]] - The same as visual-regexp, but use modern regular expressions instead of Emacs-style.
    - [[https://github.com/mkcms/interactive-align][ialign]] - Interactively align lines using a regular expression.
    - [[https://github.com/abo-abo/tiny][tiny]] - Templates based on linear range transformations.

*** Quotes & Parenthesis & Delimiters Handling

**** Insert & Edit

   - [[https://www.emacswiki.org/emacs/ElectricPair][electric-pair-mode]] - =[built-in]= Auto close, or insert matching delimiters: parentheses, braces, brackets, etc. ([[https://www.gnu.org/software/emacs/manual/html_node/emacs/Matching.html][GNU Manual]])
   - [[https://github.com/davidshepherd7/electric-operator][electric-operator]] - Automatically insert spaces around operators.
   - [[https://github.com/Fuco1/smartparens][SmartParens]] - Deals with parens pairs and tries to be smart about it.
   - [[https://github.com/coldnew/pangu-spacing][pangu-spacing]] - Minor-mode to automatically add space between CJK and Latin characters.
   - [[https://github.com/tslilc/siege-mode][siege-mode]] - An emacs minor mode to surround the region with smart delimiters interactively.
   - [[https://github.com/ganmacs/emacs-surround][emacs-surround]] - Emacs version of vim.surround
   - [[https://github.com/emacs-evil/evil-surround][evil-surround]] - Emacs version of vim.surround that uses =Evil= as its vi layer.

**** Select

   - [[https://github.com/magnars/expand-region.el][expand-region.el]] - Increase selected region by semantic units.
   - [[https://elpa.gnu.org/packages/expreg.html][expreg]] - Like =expand-region=, but using =tree-sitter= for language-specific region expansion.
   - [[https://github.com/bling/evil-visualstar][evil-visualstar]] - Makes visual selections work with the * operator in =evil-mode=.

**** Highlight

   - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Matching.html][show-paren-mode]] - =[built-in]= a minor mode to visualize parenthesis matching.
   - [[https://github.com/Fanael/rainbow-delimiters][rainbow-delimiters]] - Highlights parentheses, brackets, and braces according to their depth.
   - [[https://github.com/tsdh/highlight-parentheses.el][highlight-parentheses.el]] - highlight surrounding parentheses.
   - [[https://github.com/alphapapa/prism.el][prism]] - highlight code based on depth

*** Kill-ring / Clipboard

   - [[https://github.com/waymondo/popup-kill-ring][Popup-killring]] - Browse kill-ring with popup menu.
   - [[https://github.com/browse-kill-ring/browse-kill-ring][Browse-kill-ring]] - Visually navigate kill-ring.
   - [[https://github.com/leoliu/easy-kill][easy-kill]] - Kill & Mark Things Easily in Emacs.
   - [[https://github.com/bburns/clipmon][clipmon]] - Clipboard monitor for Emacs. Monitors clipboard and pastes contents on change.
   - [[https://github.com/rolandwalker/simpleclip][simpleclip]] - Simplified access to the system clipboard.

*** Drag Lines

   - [[https://github.com/emacsfodder/move-text][move-text]] - move current line or region up or down.
   - [[https://github.com/wyuenho/move-dup][move-dup]] - Minor mode for Eclipse-like moving and duplicating lines or rectangles.
   - [[https://github.com/rejeep/drag-stuff.el][Drag Stuff]] - Drag Stuff is a minor mode for Emacs that makes it possible to drag stuff (words, region, lines) around in Emacs.

*** Undo & Redo

   - [[https://www.emacswiki.org/emacs/UndoTree][undo-tree]] - Visualize the whole undo history in buffer as a tree, and you can access anywhere in it.
   - [[https://codeberg.org/ideasman42/emacs-undo-fu][undo-fu]] - An undo/redo system that advertises itself as being simpler than Undo Tree.
     - [[https://codeberg.org/ideasman42/emacs-undo-fu-session][undo-fu-session]] - Save undo history across sessions. Intended to work with, but not dependent on =undo-fu=.
   - [[https://github.com/jackkamm/undo-propose-el][undo-propose]] - Navigate the emacs undo history by staging undo's in a temporary buffer.
   - [[https://github.com/casouri/vundo][vundo]] - Navigate the emacs undo buffer history as a tree-structure.

*** Multiple Major-Mode

   - [[https://github.com/dgutov/mmm-mode][mmm-mode]] - allows Multiple Major Modes to coexist in one buffer (ex: Embedded CSS & JS in HTML file).
   - [[https://github.com/polymode/polymode][polymode]] - Framework for Multiple Major Modes in Emacs (ex: Embedded programming language code in Markdown, Org, RST file...etc)


*** Snippet

   - [[https://github.com/joaotavora/yasnippet][YASnippets]] - A template system that allows you to type an abbreviation and automatically expand it into function templates.
     - [[https://github.com/abo-abo/auto-yasnippet][auto-yasnippet]] - Advanced copy-paste using Yasnippet.
     - [[https://github.com/mkcms/ivy-yasnippet][ivy-yasnippet]] - Preview yasnippet snippets with ivy.
   - [[https://github.com/minad/tempel][Tempel]]: Template package which uses the syntax of the Emacs Tempo library.

*** Text Conversion

   - [[https://github.com/mrkkrp/fix-word][fix-word]] - Transform words in Emacs (upcase, downcase, capitalize).
   - [[https://github.com/akicho8/string-inflection][string-inflection]] - Conversion of text between lowercase, uppercase, camelcase etc.

** Programming

   - [[https://cedet.sourceforge.net/][CEDET]] - =[built-in]= an advanced development environment in Emacs.
   - [[https://github.com/thoni56/c-xrefactory][C-xrefactory]] - refactoring tool and code browser for C and Java.
   - [[https://github.com/redguardtoo/evil-nerd-commenter][evil-nerd-commenter]] - Comment/uncomment lines efficiently. Like Nerd Commenter in Vim.  This program can be used independently without evil-mode.
   - [[https://doxymacs.sourceforge.net/][Doxymacs]] - Doxymacs is Doxygen + {X}Emacs.
   - [[https://github.com/lassik/emacs-format-all-the-code][format-all]] - Auto-format source code in many languages using the same command.
   - [[https://github.com/radian-software/apheleia][apheleia]] - Run code formatter on buffer contents without moving point, using RCS patches and dynamic programming.

*** Completion

    - [[https://github.com/auto-complete/auto-complete][Auto-Complete]] - An intelligent auto-completion extension with great interface.
    - [[https://company-mode.github.io/][Company]] - A text completion framework.
      - [[https://github.com/company-mode/company-quickhelp][company-quickhelp]] - Documentation popups for company.
    - [[https://github.com/lewang/flx][flx]] - Fuzzy matching for Emacs like Sublime Text.
    - [[https://www.emacswiki.org/emacs/AbbrevMode][abbrev]] - =[built-in]= Abbreviation expander.
    - [[https://github.com/abingham/emacs-ycmd][emacs-ycmd]] - Emacs client for YCM.
    - [[https://github.com/minad/corfu][corfu]] - Corfu enhances the default completion in region function with a completion overlay.
    - [[https://codeberg.org/ideasman42/emacs-recomplete][recomplete]] - Immediate completion that doesn't block user input, but cycles through options on successive calls. It can also be used with ISpell as a fast way to correct typos.
    - [[https://codeberg.org/ideasman42/emacs-mono-complete][mono-complete]] - Non-blocking completion with preview that doesn't block user input which supports multiple back-ends at once including back-ends for dabbrev, capf and statistical word prediction among others.

*** Jump to Definition / Tagging

   - [[http://www.gnu.org/software/global/][GNU Global]] - advanced source code tagging system with jump to definition functionality.
   - [[https://github.com/jacktasia/dumb-jump][Dumb Jump]] - easy jump to definition package for multiple languages using =ag= or =grep=.
   - [[https://github.com/leoliu/ggtags][ggtags]] - Emacs frontend to GNU Global source code tagging system.
   - [[https://github.com/universal-ctags/citre][Citre]] - Advanced Ctags frontend, comes with powerful code-reading tool.

*** LSP Client

   - [[https://github.com/emacs-lsp/lsp-mode][lsp-mode]] - Emacs client for the [[https://langserver.org/][Language Server Protocol]].
     - [[https://github.com/emacs-lsp/lsp-ui][lsp-ui]] - An extension which adds code lenses and documentation pop-up for lsp-mode.
   - [[https://github.com/joaotavora/eglot][eglot]] - =[built-in]= A client for Language Server Protocol servers.
   - [[https://github.com/manateelazycat/lsp-bridge][lsp-bridge]] - Fastest LSP client for Emacs.

*** Debugging

   - [[https://github.com/realgud][realgud]] - A modular front-end for interacting with external debuggers.
   - [[https://github.com/emacs-lsp/dap-mode][dap-mode]] - An implementation of the debug adapter protocol used in VSCode and other editors.

*** Error Checking

    - [[https://www.emacswiki.org/emacs/FlyMake][FlyMake]] - =[built-in]= on-the-fly syntax checks on files using external tools.
    - [[https://github.com/flycheck/flycheck][Flycheck]] - Modern on-the-fly syntax checking meant to be a replacement to =FlyMake=.

*** Document

   - [[https://github.com/astoff/devdocs.el][devdocs]] - Browse [[https://devdocs.io][DevDocs.io]] docsets offline.
   - [[https://github.com/dash-docs-el/helm-dash][Helm-dash]] - Browse [[https://kapeli.com/dash][Dash]] docsets via Helm interface.
   - [[https://www.emacswiki.org/emacs/ElDoc][eldoc]] - =[built-in]= shows function arguments / variable doc in minibuffer when coding.
   - [[https://github.com/kuanyui/tldr.el][tldr.el]] - Emacs client of [[https://github.com/tldr-pages/tldr][tldr-pages]].

*** Code Folding

    - [[https://github.com/matsievskiysv/vimish-fold][vimish-fold]] - Vim-like text folding.
    - [[https://www.emacswiki.org/emacs/HideShow][hideshow]] - =[built-in]= Folding regions by balanced-expression code.
      - [[https://www.emacswiki.org/emacs/download/hideshowvis.el][hideshowvis]] - Based on =hideshow=, just display its nodes on fringe.
    - [[https://github.com/gregsexton/origami.el][Origami.el]] - Feature rich text folding minor mode.
    - [[https://github.com/jamescherti/outline-indent.el][outline-indent]] - Fold text based on indentation levels.

*** Compiling

    - [[https://github.com/ReanGD/emacs-multi-compile][multi-compile]] - Multi target interface to compile.
    - [[https://codeberg.org/ideasman42/emacs-fancy-compilation][fancy-compilation]] - Output enhancements to compilation-mode (including color support).
    - [[https://github.com/emacsorphanage/quickrun][quickrun]] - Implements run button used in many IDE.

** Project management

   - [[https://github.com/bbatsov/projectile][Projectile]] - Project Interaction Library for Emacs.
   - [[https://github.com/rejeep/prodigy.el][Prodigy]] - Manage external services from within Emacs.
   - [[https://github.com/sabof/project-explorer][Project-Explorer]] - a tree project explorer (integrates with projectile).
   - [[https://github.com/redguardtoo/find-file-in-project][Find-file-in-project]] - Quick access to project files in Emacs.
   - [[https://github.com/salorak/whaler.el][Whaler]] - Minimalistic and highly customizable project manager.

** File Manager

   - [[https://www.emacswiki.org/emacs/DiredMode][Dired]] - =[built-in]= *Dir* ectory *Ed* itor. A customizable great file manager.
     - [[https://github.com/alexluigit/dirvish][Dirvish]] - A polished Dired bundled with useful extensions.
     - [[https://www.emacswiki.org/emacs/DiredPlus][Dired+]] - Functional & interface extensions for Dired.
     - [[https://github.com/Fuco1/dired-hacks][dired-hacks]] - Collection of useful Dired additions.
     - [[https://github.com/emacsorphanage/dired-k][dired-k]] - Highlight Dired buffer by file size, modified time, git status.
   - [[https://github.com/jaypei/emacs-neotree][NeoTree]] - A emacs tree plugin like NERD tree for Vim.
   - [[https://www.emacswiki.org/emacs/SrSpeedbar][Sr Speedbar]] - Same frame speedbar.
     - [[https://github.com/anshulverma/projectile-speedbar][projectile-speedbar]] - Speedbar and Projectile integration.
   - [[https://github.com/emacsorphanage/direx][Direx]] - directory tree explorer.
   - [[https://codeberg.org/fourier/ztree][ztree]] - Directory tree comparison mode.
   - [[https://github.com/punassuming/ranger.el][Ranger]] - [[http://ranger.nongnu.org/][ranger]] like file manager based on Dired.
   - [[https://github.com/sunrise-commander/sunrise-commander][Sunrise Commander]] - Twin-pane file manager for Emacs based on Dired and inspired by Midnight Commander.
   - [[https://github.com/Alexander-Miller/treemacs][Treemacs]] - a tree layout file explorer for Emacs.
   - [[https://github.com/sebastiencs/sidebar.el][Sidebar.el]] - A customizable file explorer with git integration for emacs.
   - [[https://github.com/raghavgautam/tramp-hdfs][tramp-hdfs]] - Browse HDFS in Emacs with dired using Tramp.
   - [[https://github.com/suntsov/efar][eFar]] - FAR-like file manager.
   - [[https://github.com/knpatel401/filetree][filetree]] - tree-based file explorer.

** Programming Language

*** C/C++
    - [[https://cc-mode.sourceforge.net/][CC Mode]] - =[built-in]= An Emacs and XEmacs mode for editing C and other languages with similar syntax.
    - [[https://github.com/Andersbakken/rtags][rtags]] - A C/C++ client/server indexer with for integration with emacs based on clang.
    - [[https://github.com/emacs-lsp/emacs-ccls][emacs-ccls]] - Emacs client of [[https://github.com/MaskRay/ccls][ccls]], a C/C++/Objective-C language server powered by clang.
    - [[https://github.com/cquery-project/emacs-cquery][emacs-cquery]] - Emacs client of [[https://github.com/jacobdufault/cquery][cquery]], a C/C++/Objective-C language server powered by clang.
    - [[https://github.com/Sarcasm/irony-mode][irony-mode]] - A C/C++ minor mode for Emacs powered by libclang.
    - [[https://github.com/Lindydancer/cmake-font-lock][cmake-font-lock]] - Enhanced font-lock rules for CMake.
    - [[https://github.com/abo-abo/function-args][function-args]] - visual CEDET enhancements for C++.
    - [[https://www.gnu.org/software/emacs/manual/html_node/ebrowse/index.html][Ebrowse]] - =[built-in]= A C++ class browser.
    - [[https://github.com/atilaneves/cmake-ide/][cmake-ide]] - Configures other packages to consider compile options like include paths from cmake projects to improve e.g. autocompletion.
    - [[https://github.com/emacsmirror/clang-format][clang-format]] - An interface to clang-format for Emacs, provides C/C++ code formatting functionality.
    - [[https://github.com/mkcms/compiler-explorer.el][compiler-explorer]] - A client for [[https://godbolt.org][compiler-explorer]]

*** Python

    - [[https://github.com/jorgenschaefer/elpy][Elpy]] - An Emacs Python development environment.
    - [[https://github.com/pythonic-emacs/anaconda-mode][anaconda-mode]] - Code navigation, documentation lookup and completion for Python.
    - [[https://github.com/porterjamesj/virtualenvwrapper.el][virtualenvwrapper.el]] - Manage virtualenv from inside Emacs.
    - [[https://github.com/pwalsh/pipenv.el][pipenv.el]] - Integrates pipenv to emacs providing useful commands.
    - [[https://github.com/Reagankm/renpy-mode][renpy-mode]] - Emacs major mode for working with the Ren'Py visual novel engine.

*** Ruby

    - [[https://github.com/senny/rvm.el][rvm]] - Ruby versions manager within Emacs.
    - [[https://github.com/endofunky/bundler.el][bundler]] - Interact with gem Bundler from Emacs.
    - [[https://github.com/nonsequitur/inf-ruby][inf-ruby]] - REPL buffer connected to a Ruby subprocess.
    - [[https://github.com/zenspider/enhanced-ruby-mode][enhanced-ruby-mode]] - Enhanced Ruby Mode replaces the emacs ruby mode that
      comes with ruby. It uses the Ripper class found in ruby 1.9.2 (and later)
      to parse and indent the source code.
    - [[https://www.emacswiki.org/emacs/yari.el][yari]] - Yet Another RI interface for Emacs.
    - [[https://github.com/dgutov/robe][robe]] - Code navigation, documentation lookup and completion for Ruby.
    - [[https://github.com/rubocop/rubocop][rubocop]] - A Ruby static code analyzer, based on the community Ruby style guide.
    - [[https://github.com/ainame/motion-mode][motion-mode]] - A package to provide emacs' major mode for RubyMotion environment.
    - [[https://github.com/pezra/rspec-mode][rspec-mode]] - An RSpec minor mode for Emacs.
    - [[https://github.com/michaelklishin/cucumber.el][feature-mode]] - Emacs mode for editing Cucumber plain text stories.
    - [[https://github.com/asok/projectile-rails][projectile-rails]] - Emacs minor mode for working with Ruby on Rails applications and engines.
    - [[https://github.com/eschulte/rinari][rinari]] - Rinari Is Not A Rails IDE (it is an Emacs minor mode for Rails).

*** Lisp Family

    - [[https://www.emacswiki.org/emacs/ParEdit][Paredit]] - Minor mode for editing parentheses. Strict parenthesis auto-pairing and easy depth adjustment. Compatible with Lisp/Scheme/Clojure.
    - [[https://github.com/abo-abo/lispy][lispy]] - Minor mode for editing parenthesis, evaluating and refactoring LISP code with extremely short key bindings. Compatible with Lisp/Scheme/Clojure.
    - [[https://github.com/DogLooksGood/parinfer-mode][Parinfer]] - [[https://shaunlebron.github.io/parinfer/][Parinfer]] for Emacs, simpler Lisp editing.

**** Common Lisp

     - [[https://github.com/slime/slime][SLIME]] - A fully-functional IDE for Common Lisp development, with debugger, REPL.
       - [[https://github.com/joaotavora/sly][SLY]] - A fork of SLIME.
     - [[https://github.com/mrkkrp/common-lisp-snippets][common-lisp-snippets]] - Yasnippets for Common Lisp.

**** Scheme

     - [[https://www.neilvandyke.org/quack/][Quack]] - Enhanced Emacs Support for Editing and Running Scheme Code.
     - [[http://www.nongnu.org/geiser/][Geiser]] - Integrated development with Guile and Racket.

**** Racket

     - [[https://github.com/greghendershott/racket-mode][racket-mode]] - Major modes for Racket: Edit and REPL.

**** Clojure

     - [[https://github.com/clojure-emacs/clojure-mode][Clojure mode]] - A major mode for clojure.
     - [[https://github.com/clojure-emacs/cider][Cider]] - Clojure IDE and REPL.
     - [[https://github.com/mpenet/clojure-snippets][Clojure snippets]] - Clojure snippets with yasnippet.
     - [[https://github.com/clojure-emacs/clj-refactor.el][clj-refactor.el]] - A collection of Clojure refactoring functions for Emacs.

**** Emacs Lisp
     - [[https://github.com/Fanael/highlight-defined][highlight-defined]] - Highlight defined functions' / variables' name.
     - [[https://www.emacswiki.org/emacs/InferiorEmacsLispMode][ielm]] - =[built-in]= A simple Emacs Lisp REPL.
     - [[https://github.com/Silex/elmacro][elmacro]] - Display keyboard macros or latest interactive commands as Emacs Lisp.
     - [[https://github.com/Wilfred/suggest.el][suggest.el]] - Discover elisp functions that do what you want.
     - [[https://github.com/cpitclaudel/easy-escape][easy-escape]] - Improve readability of escape characters in ELisp regular expressions.
     - [[https://github.com/xiongtx/eros][eros]] - Evaluation Result OverlayS for Emacs Lisp.
     - [[https://codeberg.org/ideasman42/emacs-elisp-autofmt][elisp-autofmt]] - Auto-format ELisp (with support for formatting the buffer on save).

*** Web Development

    - [[https://web-mode.org/][web-mode]] - major mode for editing various html templates (PHP, JSP, ASP, ERB...etc).
    - [[https://github.com/smihica/emmet-mode][emmet]] - [[https://emmet.io/][Emmet]] support for Emacs.
    - [[https://github.com/P233/emmet2-mode][emmet2]] - Another implemenation of [[https://emmet.io/][Emmet]], that leverages the =npm= package instead of replicating the logic in lisp.
    - [[https://github.com/yasuyk/web-beautify][web-beautify]] - Format HTML, CSS and JavaScript/JSON by js-beautify.
    - [[https://github.com/skeeto/skewer-mode][skewer-mode]] - live interact with JavaScript, CSS, and HTML in a web-browser.
    - [[https://github.com/skeeto/impatient-mode][impatient-mode]] - See your changes in the browser as you type.
    - [[https://github.com/pashky/restclient.el][restclient.el]] - HTTP REST client tool for emacs.
    - [[https://github.com/nicferrier/elnode][elnode]] - An evented IO webserver in Emacs Lisp.
    - [[https://github.com/federicotdn/verb][verb]] - Organize and send HTTP requests from Emacs.

**** JavaScript

     - [[https://github.com/mooz/js2-mode/][js2-mode]] - Improved JavaScript editing mode.
     - [[https://js-comint-el.sourceforge.net/][js-comint.el]] - Run an inferior javascript REPL process in Emacs.
     - [[http://ternjs.net/doc/manual.html#emacs][tern]] - Emacs flavor of the popular JavaScript analysis engine.
     - [[https://github.com/json-emacs/json-mode][json-mode]] - Major mode for editing JSON files.
     - [[https://github.com/NicolasPetton/indium][indium]] - A JavaScript development environment for Emacs.
     - [[https://github.com/js-emacs/js2-refactor.el][js2-refactor]] - A JavaScript refactoring library for emacs.
     - [[https://github.com/felipeochoa/rjsx-mode][rjsx-mode]] - A JSX major mode for Emacs.
     - [[https://github.com/shaneikennedy/npm.el][npm.el]] - Run your npm workflows in emacs.

***** CoffeeScript

      - [[https://github.com/defunkt/coffee-mode][coffee-mode]] - An Emacs major mode for CoffeeScript and IcedCoffeeScript.

***** TypeScript

      - [[https://github.com/ananthakumaran/tide][Tide]] - TypeScript Interactive Development Environment for Emacs.

***** PureScript

      - [[https://github.com/dysinger/purescript-mode][purescript-mode]] - An Emacs major mode for PureScript.
      - [[https://github.com/purescript-emacs/emacs-psci][emacs-psci]] - An Emacs major mode for psci.
      - [[https://github.com/purescript-emacs/psc-ide-emacs][psc-ide-emacs]] - Emacs integration for PureScript's psc-ide tool.

**** PHP

     - [[https://github.com/emacs-php/php-mode][php-mode]] - Major mode for PHP programming.
     - [[https://github.com/nlamirault/phpunit.el][phpunit.el]] - Launch PHP unit tests using phpunit.
     - [[https://github.com/emacs-php/phpactor.el][phpactor.el]] - Interface to Phpactor (an intelligent code-completion and refactoring tool for PHP).
     - [[https://github.com/emacs-php/composer.el][composer.el]] - PHP Composer interface for Emacs.
     - [[https://github.com/emacs-php/psysh.el][psysh.el]] - PsySH on Emacs, PHP interactive shell (REPL).

*** Java

    - [[https://github.com/emacs-eclim/emacs-eclim][emacs-eclim]] - An Eclipse plugin which exposes Eclipse features through a server interface.
    - [[https://github.com/mopemope/meghanada-emacs][meghanada-emacs]] - A Better Java Development Environment for Emacs.
    - [[https://github.com/emacs-lsp/lsp-java][lsp-java]] - Eclipse JDT Language Server integration for Emacs.

*** Go

    - [[https://github.com/dominikh/go-mode.el][Gomode]] - Go mode rewrite for Emacs. Provides Go toolchain integration.
    - [[https://github.com/dougm/goflymake][Goflymake]] - Go syntax checker. Wrapper around Emacs flymake for Go.
    - [[https://github.com/nsf/gocode][Gocode]] - An autocompletion daemon for the Go programming language.
    - [[https://github.com/dominikh/go-errcheck.el][Goerrcheck]] - go-errcheck provides an easy way to invoke errcheck from within Emacs.
    - [[https://github.com/grafov/go-playground][Go-playground]] - Local playground for Go code snippets.
    - [[https://github.com/manute/gorepl-mode][GoRepl]] - A minor emacs mode for Go REPL.
    - [[https://github.com/nlamirault/gotest.el][gotest.el]] - Launch GO unit tests.
    - [[https://github.com/brantou/emacs-go-tag][emacs-go-tag]] - Edit field tags for golang struct fields, based on [[https://github.com/fatih/gomodifytags][gomodifytags]].
    - [[https://github.com/weijiangan/flycheck-golangci-lint][flycheck-golangci-lint]] - Flycheck checker for golangci-lint.

*** C#

    - [[https://github.com/emacs-csharp/csharp-mode][csharp-mode]] - Major mode for C#.
    - [[https://github.com/OmniSharp/omnisharp-emacs][omnisharp-emacs]] - IDE-like features for editing C# code.

*** Rust

    - [[https://github.com/rust-lang/rust-mode][rust-mode]] - An Emacs major mode for editing Rust code.
    - [[https://github.com/flycheck/flycheck-rust][flycheck-rust]] - Better Rust/Cargo support for Flycheck.
    - [[https://github.com/racer-rust/emacs-racer][emacs-racer]] - Racer support for Emacs.
    - [[https://github.com/kwrooijen/cargo.el][cargo.el]] - Cargo support for Emacs.
    - [[https://github.com/brotzeit/rustic][rustic]] - A fork of rust mode with improvements and configurations for things such as flycheck and lsp-mode.

*** Erlang

    - [[https://www.erlang.org/doc/apps/tools/erlang_mode_chapter.html][erlang]] - The official Erlang mode for Emacs.
    - [[https://github.com/massemanet/distel][distel]] - Distel is a library for Emacs<->Erlang communication, plus a suite of tools built on top of it, such as a debugger front-end.
    - [[https://github.com/sebastiw/edts][EDTS]] - EDTS is meant to be able to replace Distel but only provides part of the most commonly used of Distel's features.
    - [[https://github.com/RefactoringTools/Wrangler][Wrangler]] - Wrangler is a mode that supports interactive refactoring of Erlang programs.

*** Elixir

    - [[https://github.com/elixir-editors/emacs-elixir][elixir-mode]] - Emacs major mode for Elixir.
    - [[https://github.com/tonini/alchemist.el][alchemist]] - Elixir Tooling Integration Into Emacs.

*** Haskell

    - [[https://github.com/haskell/haskell-mode][haskell-mode]] - Major mode for Haskell.
    - [[https://github.com/jyp/dante][dante]] - Dante provides a frontend to GHCi features: type-checking, execution, completion and cross referencing. It integrates with standard Emacs tooling as much as possible.
    - [[https://github.com/projectional-haskell/structured-haskell-mode][structured-haskell-mode]] - Minor mode for structured editing of Haskell.
    - [[https://github.com/alanz/HaRe][HaRe]] - Haskell refactoring tool with Emacs integration.
    - [[https://github.com/matthewbauer/nix-haskell-mode]] - Nix integration for Haskell development.
    - [[https://github.com/emacs-lsp/lsp-haskell][lsp-haskell]] and [[https://github.com/haskell/haskell-language-server][haskell-language-server]] - A successor to Intero under active development.

#+BEGIN_QUOTE
External Guides:
- [[https://github.com/serras/emacs-haskell-tutorial/blob/master/tutorial.md][Using Emacs for Haskell development]]
#+END_QUOTE

*** Swift

    - [[https://github.com/swift-emacs/swift-mode][swift-mode]] - Emacs support for Apple's Swift programming language.
    - [[https://gitlab.com/michael.sanders/swift-playground-mode][swift-playground-mode]] - Emacs support for Swift playgrounds.
    - [[https://github.com/nathankot/company-sourcekit][company-sourcekit]] - Completion for Swift projects via SourceKit with the help of SourceKitten.

*** Scala

    - [[https://ensime.github.io/][Ensime]] - ENhanced Scala Interaction Mode for Emacs.
    - [[https://github.com/hvesalai/emacs-sbt-mode_old][sbt-mode]] - An emacs mode for interacting with scala sbt and projects.
    - [[https://scalameta.org/metals/docs/editors/emacs/][Metals]] - Scala language server with rich IDE features.

*** Lua

    - [[https://github.com/immerrr/lua-mode/][lua-mode]] - A major mode for editing Lua sources in Emacs.

*** Makefile

    - [[https://www.emacswiki.org/emacs/MakefileMode][Makefile Mode]] - =[built-in]= A major mode for editing Makefiles.
    - [[https://github.com/abo-abo/helm-make][helm-make]] - Select a Makefile target with helm.
    - [[https://github.com/nick96/basic-c-compile][basic-c-compile]] - Emacs package to create a Makefile, compile and run a C file.
    - [[https://github.com/Olivia5k/makefile-executor.el][makefile-executor]] - Emacs helpers to run things from Makefiles.
    - [[https://github.com/danamlund/emacs-makefile-runner][emacs-makefile-runner]] - Searches for Makefile and fetches targets.

*** SML

    - [[http://www.iro.umontreal.ca/~monnier/elisp/][SML mode]] - a major Emacs mode for editing Standard ML source code.

*** Gdscript

    - [[https://github.com/godotengine/emacs-gdscript-mode][gdscript-mode]] - An Emacs package to get GDScript support and syntax highlighting.

*** Groovy

    - [[https://github.com/Groovy-Emacs-Modes/groovy-emacs-modes][groovy-emacs-modes]] - A collection of modes for use with Groovy-related technology -- Groovy, Grails, etc.
    - [[https://github.com/lifeisfoo/emacs-grails][grails.el]] - A minor mode for Grails projects.

*** Kotlin

    - [[https://github.com/Emacs-Kotlin-Mode-Maintainers/kotlin-mode][kotlin-mode]] - Kotlin major mode for Emacs.

*** R

    - [[https://ess.r-project.org/][ESS]] - Emacs Speaks Statistics (ESS) supports editing of scripts and interaction with various statistical analysis programs such as R, S-Plus, SAS, Stata and OpenBUGS/JAGS.

*** Julia

    - [[https://github.com/JuliaEditorSupport/julia-emacs/][julia-mode]] - Major mode for editing Julia source code.
    - [[https://github.com/tpapp/julia-repl][julia-repl]] - A minor emacs mode for Julia REPL.

*** OCaml

    - [[https://github.com/ocaml/tuareg][tuareg]] - a Caml mode for Emacs.
    - [[https://www.typerex.org/][TypeRex]] - a set of tools for developing in OCaml.
    - [[https://github.com/ocaml/merlin][Merlin]] - an assistant for editing OCaml code.

*** ReasonML

    - [[https://github.com/reasonml-editor/reason-mode][reason-mode]] - An Emacs major mode for ReasonML.

*** Mint

    - [[https://github.com/creatorrr/emacs-mint-mode][emacs-mint-mode]] - An Emacs major mode for editing Mint code.

*** Nim

    - [[https://github.com/nim-lang/nim-mode][nim-mode]] - An Emacs major mode for editing Nim code.

*** D

    - [[https://github.com/Emacs-D-Mode-Maintainers/Emacs-D-Mode][Emacs-D-Mode]] - An Emacs major mode for editing D code.

*** Raku

    - [[https://github.com/Raku/raku-mode][raku-mode]] - An Emacs major mode for editing Raku code.

*** Elm

    - [[https://github.com/jcollard/elm-mode][elm-mode]] - An Emacs major mode for editing Elm code.

*** Stan

    - [[https://github.com/stan-dev/stan-mode][stan-mode]] - An Emacs major mode for editing Stan code.

*** MIPS Assembly

    - [[https://github.com/hlissner/emacs-mips-mode][mips-mode]] - An emacs major mode for editing MIPS assembly.

*** RISC-V Assembly

    - [[https://github.com/AdamNiederer/riscv-mode][riscv-mode]] - An emacs major mode for editing RISC-V assembly.

*** Verilog/SystemVerilog

    - [[https://github.com/veripool/verilog-mode][verilog-mode]] - Emacs major mode for Verilog and SystemVerilog with Indentation, Highlighting and AUTOs.
    - [[https://github.com/gmlarumbe/verilog-ext][verilog-ext]] - SystemVerilog Extensions for Emacs.
    - [[https://github.com/gmlarumbe/verilog-ts-mode][verilog-ts-mode]] - SystemVerilog Tree-sitter mode for Emacs.

*** VHDL

    - [[https://iis-people.ee.ethz.ch/~zimmi/emacs/vhdl-mode.html][vhdl-mode]] - =[built-in]= Emacs major mode for editing VHDL code.
    - [[https://github.com/gmlarumbe/vhdl-ext][vhdl-ext]] - VHDL Extensions for Emacs.
    - [[https://github.com/gmlarumbe/vhdl-ts-mode][vhdl-ts-mode]] - VHDL Tree-sitter mode for Emacs.

*** LAMMPS

    - [[https://github.com/HaoZeke/lammps-mode][lammps-mode]] - Emacs major mode for [[https://github.com/lammps/lammps][LAMMPS Molecular Dynamics Simulator]] scripts with proper font-locking.

*** Ada

    - [[https://www.nongnu.org/ada-mode/][ada-mode]] - An emacs major mode for editing Ada sources.
    - [[https://elpa.gnu.org/packages/gpr-mode.html][gpr-mode]] - An emacs major mode for editing GNAT Project files (GPR).

**  AI

*** Code Completion

    - [[https://github.com/s-kostyaev/ellama][Ellama]] - Emacs plugin for [[https://github.com/ollama/ollama][Ollama]], which has both code completion and refactoring capabilities, running on the CPU and with experimental AMD GPU support.
    - [[https://github.com/ragnard/tabby-mode][tabby-mode]] - Emacs interface for [[https://tabby.tabbyml.com][Tabby]], an OpenSource self-hosted coding assistant with support for CPU and AMD GPU.
    - [[https://github.com/copilot-emacs/copilot.el][Copilot.el]] - an Emacs plugin for GitHub Copilot.

*** ChatGPT

    - [[https://github.com/rksm/org-ai][org-ai]] - Minor mode for Emacs org-mode that provides access to generative AI models.
    - [[https://github.com/xenodium/chatgpt-shell][chatgpt-shell]] - ChatGPT and DALL-E Emacs shells + Org Babel.
    - [[https://github.com/karthink/gptel][GPTel]] - A simple ChatGPT client for Emacs.

*** AI assistant programming
    - [[https://github.com/tninja/aider.el][aider.el]] - aider (AI Pair Programming) Inside Emacs
    - [[https://github.com/lanceberge/elysium][elysium]] - Automatically apply AI-generated changes as you code with GPTel

** Session management

    - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html#Saving-Emacs-Sessions][desktop]] - =[built-in]= Save and restore the state of your Emacs environment.
    - [[https://github.com/jamescherti/easysession.el][easysession]] - A lightweight session manager that persists and restores Emacs frames, the tab-bar, and buffers (file editing buffers, indirect buffers, Dired buffers, etc.).

** Keys Cheat Sheet

  - [[https://github.com/justbur/emacs-which-key][which-key]] - Display available key bindings in popup. Rewrite of guide-key with added features to improve display.
  - [[https://github.com/emacs-helm/helm-descbinds][helm-descbinds]] - Helm interface for Emacs' =describe-bindings=.
  - [[https://github.com/kai2nenobu/guide-key][guide-key]] - Displays the available key bindings automatically and dynamically.
  - [[https://github.com/aki2o/guide-key-tip][guide-key-tip]] - Tooltip version of guide-key.
  - [[https://framagit.org/steckerhalter/discover-my-major][discover-my-major]] - Discover key bindings and their meaning for the current Emacs major mode.
  - [[https://github.com/mickeynp/discover.el][discover.el]] - Discover more of emacs with well-categorized context menus.
  - [[https://github.com/mykyta-shyrin/cheatsheet][cheatsheet]] - Create your own customized cheatsheet.

** Note

    - [[http://www.gnu.org/software/emacs-muse/][Emacs Muse]] - a publishing environment for Emacs.
    - [[https://github.com/rnkn/fountain-mode/][Fountain Mode]] - a full-featured screenwriting environment for GNU Emacs using the Fountain markup format.
    - [[https://github.com/tmalsburg/guess-language.el][guess-language]] - Robust automatic language detection (e.g. Arabic, Czech, Danish, etc).
    - [[https://github.com/SavchenkoValeriy/emacs-powerthesaurus][emacs-powerthesaurus]] - Powerthesaurus integration for Emacs.
    - [[https://github.com/jrblevin/deft][deft]] - Quickly browse, filter, and edit directories of plain text notes.
      - [[https://github.com/EFLS/zetteldeft][zetteldeft]] - Extend deft.el and turn it into a basic Zettelkasten note-taking system.

*** Org-mode

    - [[https://orgmode.org/][Org]] - =[built-in]= Write notes, GTD, authoring, publish and wash dishes.
      - [[https://github.com/emacsorphanage/org-page][org-page]] - A static site generator based on org-mode files.
      - [[https://github.com/coldnew/org-ioslide][org-ioslide]] - Export Org document into Google I/O HTML5 slide.
      - [[https://github.com/sabof/org-bullets][org-bullets]] - Shows org-mode bullets as pretty UTF-8 characters.
      - [[https://github.com/minad/org-modern][org-modern]] - Implements a modern style for org buffers, including UTF-8 characters.
      - [[https://github.com/org-trello/org-trello][org-trello]] - Minor mode to synchronize org-mode buffer and [[https://trello.com][trello]] board.
      - [[https://github.com/alphapapa/org-protocol-capture-html][org-protocol-capture-html]] - Capture HTML from the browser selection into Emacs as org-mode content.
      - [[https://github.com/Kungsgeten/org-brain][org-brain]] - Org-mode wiki + concept-mapping.
      - [[https://github.com/rexim/org-cliplink][org-cliplink]] - Insert org-mode links from clipboard.
      - [[https://github.com/alphapapa/org-rifle][helm-org-rifle]] - Rifle through your Org buffers and acquire your target.
      - [[https://github.com/abo-abo/org-download][org-download]] - Drag and drop images to Emacs org-mode.
      - [[https://github.com/fniessen/org-html-themes][org-html-themes]] - Export Org mode files into awesome HTML in 2 minutes.
      - [[https://github.com/alphapapa/org-super-agenda][org-super-agenda]] - Help organize your agenda items into tidy groups.
      - [[https://github.com/weirdNox/org-noter][org-noter]] - Annotate documents with a synchronized org-mode buffer alongside them.
      - [[https://github.com/felipelalli/org-sort-tasks][org-sort-tasks]] - Functions to keep TODO tasks in orgmode sorted and organized.
      - [[https://github.com/DanielDe/org-web][org-web]] - Web app for viewing and editing org files online, optimized for mobile use.
      - [[https://github.com/org-roam/org-roam][org-roam]] -  a [[https://roamresearch.com/][Roam]] replica built on top of the all-powerful Org-mode.
      - [[https://github.com/alphapapa/org-ql][org-ql]] - An Org-mode query language, including search commands and saved views.
      - [[https://github.com/nobiot/org-transclusion][org-transclusion]] - Link content between buffers to make multiple changes with one edit.
      - [[https://github.com/snosov1/toc-org][toc-org]] - Generate TOC for Org files.
      - [[https://github.com/ichernyshovvv/org-timeblock][org-timeblock]] — Interactive multiple-day timeblock view for orgmode tasks.
      - [[https://github.com/positron-solutions/dslide][dslide]] - Programmable presentation for org documents

** Version control

   - [[https://magit.vc/][Magit]] - Interacting with git.
     - [[https://github.com/magit/forge][forge]] -  Work with Git forges, such as Github and Gitlab, from the comfort of Magit.
     - [[https://github.com/vermiculus/magithub][magithub]] - Magit interfaces for GitHub. [Deprecated. The project suggests using forge]
     - [[https://github.com/alphapapa/magit-todos][magit-todo]] - Show TODO's and FIXME's within a magit status buffer.
     - [[https://github.com/emacsorphanage/magit-svn][magit-svn]] - git svn integration for magit.
     - [[https://github.com/Ailrun/magit-lfs][magit-lfs]] - git lfs integration for magit.
   - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Version-Control.html][VC]] - =[built-in]= Emacs version control interface works with several different version control systems including Bazaar, CVS, Git, Mercurial, Monotone, RCS, SCCS/CSSC, and Subversion.
   - [[https://github.com/dgutov/diff-hl][diff-hl]] - Highlights uncommitted changes. Works with several different VC systems. An actively-maintained alternative to =git-gutter=.
   - [[https://github.com/dgtized/github-clone.el][github-clone.el]] - Fork and clone Github projects from Emacs.
   - [[https://github.com/magit/git-modes][git-rebase-mode]] - Major mode for editing git rebase files.
   - [[https://gitlab.com/pidu/git-timemachine][git-timemachine]] - Step through historic versions of git controlled files.
   - [[https://github.com/emacsorphanage/git-gutter][git-gutter]] - Indicates modified lines via git diff. [Unmaintained, consider using =diff-hl= instead.]
   - [[https://github.com/emacsorphanage/git-messenger][git-messenger]] - popup commit message at current line to know why this line was changed.
   - [[https://github.com/rmuslimov/browse-at-remote][browse-at-remote]] - Open page at github/bitbucket from emacs buffers.
   - [[https://github.com/sshaw/git-link][git-link]] - Get the GitHub/Bitbucket/GitLab etc... URL for a buffer location.
   - [[https://github.com/ananthakumaran/monky][monky]] - An interactive interface for mercurial.
   - [[https://bitbucket.org/agriggio/ahg/][aHg]] - An Emacs front-end for the Mercurial SCM.
   - [[https://github.com/jwiegley/git-undo-el][git-undo]] - A command for Emacs to regress or "undo" a region back through its Git history.

#+BEGIN_QUOTE
For additional git-related emacs packages to use or to get inspiration from, take a look at the following resource: [[https://github.com/tarsius-legacy/git-elisp-overview]].
#+END_QUOTE

** Integration

*** Console

    - [[https://www.emacswiki.org/emacs/CategoryEshell][EShell]] - =[built-in]= A shell-like command interpreter implemented in Emacs Lisp.
    - [[https://www.emacswiki.org/emacs/AnsiTerm][Term]] - =[built-in]= A terminal emulator in Emacs.
    - [[https://www.emacswiki.org/emacs/MultiTerm][multi-term]] - Managing multiple terminal buffers in Emacs.
    - [[https://github.com/akermu/emacs-libvterm][vterm]] - A fully-fledged terminal emulator inside Emacs based on [[https://github.com/neovim/libvterm][libvterm]].
    - [[https://codeberg.org/akib/emacs-eat][Eat]] - Emulate A Terminal, in a region, in a buffer and in Eshell.
    - [[https://github.com/purcell/exec-path-from-shell][exec-path-from-shell]] - Get environment variables such as $PATH from the shell for Mac user.
    - [[https://github.com/zwild/eshell-prompt-extras][eshell-prompt-extras]] - Display extra information and color for your eshell prompt.
    - [[https://github.com/kyagi/shell-pop-el][shell-pop]] - Quickly toggle a shell with one key action.
    - [[https://github.com/peterwvj/eshell-up][eshell-up]] - Quickly navigate to a specific parent directory in eshell without having to repeatedly typing ~cd ..~.
    - [[https://framagit.org/steckerhalter/emacs-fasd][fasd]] - Emacs integration for the command-line productivity booster fasd.
    - [[https://github.com/dieggsy/esh-autosuggest/][esh-autosuggest]] - Fish-like history autosuggestions in Eshell.
    - [[https://github.com/Ambrevar/emacs-fish-completion][fish-completion]] - Fallback on [[https://fishshell.com/][fish shell]] completion for ~M-x shell~ and Eshell.
    - [[https://github.com/manateelazycat/aweshell][aweshell]] - Awesome shell extension based on eshell with wonderful features!
    - [[https://github.com/bling/fzf.el][fzf.el]] - An extensible Emacs front-end for [[https://github.com/junegunn/fzf][fzf]].

*** Operating System
    - [[https://github.com/ch11ng/exwm][EXWM]] - EXWM turns Emacs into a full-featured tiling X window manager.
      - [[https://github.com/emacs-helm/helm-exwm][Helm-EXWM]] - EXWM-specific sources for Helm together with an application launchers and switches.
    - [[https://github.com/sinic/ednc/][EDNC]] - Manage all your desktop notifications without leaving Emacs.
    - [[https://depp.brause.cc/eyebrowse/][Eyebrowse]] - A simple-minded way of managing window configs in emacs.
    - [[https://github.com/emacs-eaf/emacs-application-framework][Emacs Application Framework]] - EAF's extensibility allows one to interact with [[https://riverbankcomputing.com/software/pyqt/intro][PyQt]] GUI applications, so that one can develop any PyQt application and integrate it into Emacs (e.g. web browser, video player, camera, rss reader, etc).
    - [[https://github.com/zk-phi/symon/][Symon]] - Tiny graphical system monitor.
    - [[https://github.com/iqbalansari/restart-emacs][restart-emacs]] - A simple emacs package to restart emacs from within emacs.
    - [[https://github.com/emacs-helm/helm-system-packages][Helm System Packages]] - A Helm interface to the package manager of your operating system.
    - [[https://gitlab.com/jabranham/system-packages][system-packages]] - Manage your installed packages with emacs.
    - [[https://github.com/jcaw/theme-magic][theme-magic]] - Apply your Emacs theme to the rest of Linux.
    - [[https://github.com/benmaughan/spotlight.el][spotlight]] - Emacs package to query macOS Spotlight.
    - [[https://github.com/raghavgautam/osx-lib][osx-lib]] - Emacs functions for macOS.
    - [[https://github.com/emacsorphanage/osx-trash/][osx-trash]] - Make ~delete-by-moving-to-trash~ do what you expect it to do on macOS.

*** Search

    - [[https://github.com/mhayashi1120/Emacs-wgrep][wgrep]] -  Writable grep/ack/ag/pt buffer and apply the changes to files.

**** Ack

    - [[http://nschum.de/src/emacs/full-ack/][full-ack]] - An Emacs front-end for ack.
    - [[https://github.com/leoliu/ack-el][ack-el]] - Emacs Interface to Ack-like Tools.

**** Ag

     - [[https://github.com/Wilfred/ag.el][ag.el]] - An Emacs frontend to Ag ("the silver searcher" ack replacment).
     - [[https://github.com/emacsorphanage/helm-ag][helm-ag]] - Ag with helm interface.

**** Pt

     - [[https://github.com/bling/pt.el][pt.el]] - An emacs front-end for Pt, the [[https://github.com/monochromegane/the_platinum_searcher][Platinum Searcher]].

**** Sift

     - [[https://github.com/nlamirault/sift.el][sift.el]] - Front-end for [[https://github.com/svent/sift][sift]], a fast and powerful grep alternative.

**** Ripgrep

     - [[https://github.com/Wilfred/deadgrep][deadgrep]] - Deadgrep is the fast, beautiful text search that your Emacs deserves.
     - [[https://github.com/dajva/rg.el][rg.el]] - Emacs search tool based on ripgrep.
     - [[https://github.com/nlamirault/ripgrep.el][ripgrep.el]] - Emacs front-end for [[https://github.com/BurntSushi/ripgrep][ripgrep]], a command line search tool.
     - [[https://github.com/manateelazycat/color-rg][color-rg.el]] -- Search and refactoring tool base on ripgrep, integrate edit feature like wgrep, don't need install wgrep added.

*** Pastebin

    - [[https://github.com/defunkt/gist.el][gist.el]] - Paste Gist in Emacs.
    - [[https://github.com/mhayashi1120/yagist.el][yagist.el]] - Yet another Gist integration.
    - [[https://github.com/gregnewman/dpaste.el][dpaste.el]] - Emacs mode to post to dpaste.com.
    - [[https://github.com/emacs-pe/jist.el][jist.el]] - Yet another gist client for Emacs.
    - [[https://github.com/etu/webpaste.el][webpaste.el]] - Paste to pastebin-like services.

*** Google

    - [[https://github.com/Malabarba/emacs-google-this][google-this]] - A set of functions and bindings to google under point.
    - [[https://github.com/atykhonov/google-translate][google-translate]] - Interface to Google Translate.
    - [[https://github.com/jd/google-maps.el][google-maps]] - Google Maps support for Emacs.

*** Blog System

    - [[https://github.com/nibrahim/Hyde][Hyde]] - An Emacs mode to manage [[https://jekyllrb.com/][Jekyll]] blogs.
    - [[https://github.com/kuanyui/hexo.el][hexo.el]] - A frontend UI of [[https://hexo.io/][Hexo]] for Emacs.
    - [[https://github.com/xcodebuild/blog-admin][blog-admin]] - Write blog in emacs with hexo/org-page/nikola.
    - [[https://github.com/thiefuniverse/blog-minimal][blog-minimal]] - A simple static site generator based on org mode.
    - [[https://ox-hugo.scripter.co][ox-hugo]] - Export Org subtrees/files to Markdown with front-matter for [[https://gohugo.io][Hugo]] static site generator.

** Markdown

   - [[https://jblevins.org/projects/markdown-mode/][Markdown-mode]] - markdown-mode is a major mode for editing Markdown-formatted text files in GNU Emacs.
   - [[https://github.com/milkypostman/markdown-mode-plus][markdown-mode+]] - Additional functions for Emacs [markdown-mode].
   - [[https://github.com/ardumont/markdown-toc][markdown-toc]] - Generate TOC for markdown files.
   - [[https://github.com/nlamirault/emacs-markdownfmt][markdownfmt]] - Format markdown using [[https://github.com/shurcooL/markdownfmt][markdownfmt]].
   - [[https://github.com/seagle0128/grip-mode][grip-mode]] - Instant Github-flavored Markdown/Org preview using [[https://github.com/joeyespo/grip][Grip]].

** LaTeX

   - [[https://www.gnu.org/software/auctex/][AUCTeX]] - an extensible package for writing and formatting TeX files.
   - [[https://www.emacswiki.org/emacs/LaTeXPreviewPane][latex-preview-pane]] is a minor mode for Emacs that enables you to preview your LaTeX files directly in Emacs.
   - [[https://www.gnu.org/software/auctex/reftex.html][RefTeX]] - =[built-in]= Adds support for labels, references, citations, and index entries.
   - [[https://gitlab.com/matsievskiysv/math-preview][math-preview]] - Preview TeX and MathML equations inline.

** PDF

   - [[https://github.com/vedang/pdf-tools][PDF Tools]] - major mode for rendering PDF files, much better than DocView, and has a much richer set of features.
   - [[https://github.com/007kevin/pdf-view-restore][pdf-view-restore]] - addition to PDF Tools which saves the current position in a PDF to resume reading at that place even after the buffer has been closed or emacs restarted.

** Internet

*** Browser

     - [[https://www.gnu.org/software/emacs/manual/html_mono/eww.html][EWW]] - =[built-in]= EWW, the Emacs Web Wowser, is a web browser for Emacs.

*** Mail

     - [[https://www.emacswiki.org/emacs/CategoryGnus][Gnus]] - =[built-in]= Reading e-mail and Usenet news.
     - [[https://www.emacswiki.org/emacs/MessageMode][Messages]] - =[built-in]= Composing and sending e-mail inside Emacs.
     - [[https://www.djcbsoftware.nl/code/mu/mu4e.html][mu4e]] - An e-mail client for Emacs.
       - [[https://github.com/iqbalansari/mu4e-alert/][mu4e-alert]] - Desktop notifications and modeline display for mu4e.
       - [[https://gitlab.com/ambrevar/mu4e-conversation/][mu4e-conversation]] - Alternative view for displaying emails in mu4e.
     - [[https://notmuchmail.org/][notmuch]] - A mail indexer which can serve as a complete client with its emacs integration.
     - [[https://www.emacswiki.org/emacs/WanderLust][Wanderlust]] - A powerful email and Usenet client for Emacs (IMAP4rev1, NNTP, POP(POP3/APOP), MH/Maildir).
     - [[http://www.mew.org/en/][mew]] - A very easy to use e-mail reader and client for Emacs.

*** IRC

    - [[https://www.emacswiki.org/emacs/ERC][ERC]] - =[built-in]= A powerful, modular, and extensible IRC client.
    - [[http://www.nongnu.org/riece/index.html.en][Riece]] - An IRC client for Emacs.
    - [[https://www.emacswiki.org/emacs/rcirc][Rcirc]] - =[built-in]= Next generation IRC client.
    - [[https://github.com/emacs-circe/circe][Circe]] - A Client for IRC in Emacs.

*** Chat

    - [[https://github.com/the-kenny/weechat.el][Weechat.el]] - A Weechat-relay client for Emacs.
    - [[https://github.com/yuya373/emacs-slack][slack]] - slack client for Emacs.
    - [[https://github.com/legoscia/emacs-jabber][emacs-jabber]] - XMPP client.
    - [[https://github.com/alphapapa/ement.el][ement]] - A Matrix client for Emacs.

*** Social Network

    - [[https://twmode.sourceforge.net/][Twittering mode]] - Major mode for Twitter.
    - [[https://github.com/vermiculus/sx.el/][SX]] - Stack Exchange for Emacs.
      - [[https://github.com/atykhonov/emacs-howdoi][howdoi]] - Instant coding answers via Emacs, a way to query Stack Overflow directly from within Emacs.
    - [[https://github.com/austin-----/weibo.emacs][weibo.emacs]] - Sina weibo client in Emacs.
    - [[https://codeberg.org/martianh/mastodon.el][Mastodon.el]] - An Emacs client for Mastodon.

*** Web Feed

    - [[https://github.com/skeeto/elfeed][Elfeed]] - RSS/Atom Reader for Emacs.
      - [[https://github.com/remyhonig/elfeed-org][elfeed-org]] - An extension for Elfeed which lets you define all feeds in an Org file.
    - [[https://www.gnu.org/software/emacs/manual/html_node/newsticker/index.html][Newsticker]] - =[built-in]= RSS/Atom Reader for Emacs.
*** FTP
    - [[https://www.emacswiki.org/emacs/AngeFtp][AngeFTP]] - FTP client for Emacs.
*** Torrent
    - [[https://github.com/skangas/mentor][mentor]] - GNU Emacs frontend for the rTorrent bittorrent client.

** DevOps

   - [[https://github.com/mpasternacki/chef-mode][chef-mode]] - Emacs mode to edit Chef repositories.
   - [[https://github.com/k1LoW/emacs-ansible][emacs-ansible]] - Ansible minor mode.
   - [[https://github.com/voxpupuli/puppet-mode][puppet-mode]] - Edit Puppet 3 manifests with GNU Emacs 24.
   - [[https://github.com/emacsmirror/salt-mode][salt-mode]] - Edit Salt States with GNU Emacs 24.
   - [[https://github.com/Silex/docker.el][docker]] - Emacs interface to Docker, manipulate docker images, containers & more from Emacs.
   - [[https://github.com/hcl-emacs/terraform-mode][terraform-mode]] - Terraform mode to edit terraform files.
   - [[https://github.com/kubernetes-el/kubernetes-el][kubernetes-el]] - A magit-style interface to the Kubernetes command-line client.
   - [[https://github.com/abrochard/kubel][kubel]] - Emacs extension for controlling Kubernetes with limited permissions.
   - [[https://github.com/jinnovation/kele.el][kele.el]] - Nimble, well-integrated Kubernetes cluster management package.

** Package Management

*** Package Manager

    - [[https://www.emacswiki.org/emacs/ELPA][package.el]] - =[built-in]= Install and manage Emacs packages easily.
      - [[https://github.com/Malabarba/paradox][paradox]] - Modernizing Emacs' Package Menu with package ratings, usage statistics, customizability & more.
      - [[https://github.com/Silex/package-utils][package-utils]] - Interactive extensions for package.el .
      - [[https://github.com/larstvei/Try][try]] - Try out Emacs packages.
    - [[https://github.com/dimitri/el-get][el-get]] - apt-get style Emacs packages manager.
    - [[https://github.com/cask/cask][cask]] - Manage dependencies for your local Emacs configuration and automate the package development cycle.
      - [[https://github.com/rdallasgray/pallet][pallet]] - A package management tool for Emacs, built on Cask.
    - [[https://github.com/quelpa/quelpa][quelpa]] - Build and install your Emacs Lisp packages on-the-fly directly from source.
    - [[https://github.com/brew-stuff/homebrew-emacs][homebrew-emacs]] - Homebrew tap for installing Emacs packages.
    - [[https://github.com/emacscollective/borg][borg]] - Assimilate Emacs packages as Git submodules.
    - [[https://github.com/radian-software/straight.el][straight.el]] - Next-generation, purely functional package manager for the Emacs hacker.
    - [[https://github.com/progfolio/elpaca][Elpaca]] - Elpaca is an elisp package manager. It allows users to find, install, update, and remove third-party packages for Emacs.

*** Package Configuration

    - [[https://github.com/jwiegley/use-package][use-package]] - =[built-in]= A declaration macro to isolate package configuration in a way that is performance-oriented and tidy.
      - [[https://github.com/emacsorphanage/req-package][req-package]] - A use-package wrapper for package runtime dependencies management.
    - [[https://github.com/conao3/leaf.el][leaf]] - Flexible, declarative, and modern init.el package configuration.
    - [[https://github.com/emacscollective/no-littering][no-littering]] - Help keeping ~/.emacs.d clean.

*** Package Updates

    - [[https://github.com/rranelli/auto-package-update.el][auto-package-update.el]] - Automatically update Emacs packages.
    - [[https://github.com/mola-T/SPU][SPU]] - Emacs Silent Package Upgrader.

** Config Management

   - [[https://github.com/jschaf/esup][ESUP]] - Emacs Start Up Profiler.  Benchmark Emacs Startup time without ever leaving your Emacs.
   - [[https://github.com/plexus/chemacs][Chemacs]], [[https://github.com/plexus/chemacs2][Chemacs2]] - Ease testing of different emacs setups, an Emacs profile switcher which assists running multiple Emacs configurations side by side.
   - [[https://github.com/Malabarba/elisp-bug-hunter][elisp-bug-hunter]] - Debug and bisect your init file for errors or assertions.
   - [[https://github.com/lastquestion/explain-pause-mode][explain-pause-mode]] - Monitor interactions to discover configurations or packages which slow down Emacs.
** Library

   - [[https://github.com/magnars/dash.el][dash.el]] - A modern list library.
   - [[https://elpa.gnu.org/packages/seq.html][seq.el]] - =[built-in]= Sequence manipulation functions.
   - [[https://elpa.gnu.org/packages/cl-lib.html][cl-lib.el]] - =[built-in]= Common Lisp extensions for Emacs.
   - [[https://github.com/magnars/s.el][s.el]] - String manipulation library.
   - [[https://github.com/Wilfred/ht.el][ht.el]] - The missing hash table library for Emacs.
   - [[https://github.com/rejeep/f.el][f.el]] - Modern API for working with files and directories in Emacs.
   - [[https://github.com/jwiegley/emacs-async][emacs-async]] - Simple library for asynchronous processing in Emacs.
   - [[https://github.com/emacsorphanage/ov][ov.el]] - Overlay library for Emacs Lisp.
   - [[https://github.com/Malabarba/names][Names]] - A Namespace implementation for Emacs Lisp.
   - [[https://github.com/kiwanami/emacs-deferred][emacs-deferred]] - Simple asynchronous functions for Emacs Lisp.
   - [[https://www.gnu.org/software/emacs/manual/html_node/eieio/][EIEIO]] - =[built-in]= EIEIO (“Enhanced Implementation of Emacs Interpreted Objects”) provides an Object Oriented layer for Emacs Lisp.
   - [[https://github.com/auto-complete/popup-el][popup.el]] - Visual Popup Interface Library for Emacs.
   - [[https://github.com/jwiegley/alert][alert]] - A Growl-like alerts notifier for Emacs.
   - [[https://github.com/sigma/gh.el][gh.el]] - GitHub API library for Emacs.
   - [[https://github.com/tkf/emacs-request][request]] - A HTTP request library with multiple backends.
   - [[https://github.com/ahyatt/emacs-websocket][websocket]] - A websocket implementation in elisp, for emacs.
   - [[https://github.com/Fuco1/indicators.el][indicators.el]] - Display the buffer relative location of line in the fringe.
   - [[https://github.com/tjarvstrand/pos-tip][pos-tip]] - Show tooltip at point.
   - [[https://github.com/SavchenkoValeriy/jeison][jeison]] - A library for declarative JSON parsing.
   - [[https://github.com/alphapapa/ts.el][ts.el]] - A timestamp and date-time library for Emacs.
   - [[https://github.com/radian-software/el-patch][el-patch]] - Future-proof your Emacs Lisp customizations and automatically notify you about upstream changes that might break your hacks.
   - [[https://github.com/rougier/svg-lib][SVG Library]] - A small Emacs library to create and display various SVG objects, namely tags, progress bars, progress pies, and icons. Each object is guaranteed to fit nicely in a text buffer ensuring width is an integer multiple of character width.

** Theme

   - [[https://github.com/bbatsov/zenburn-emacs][Zenburn]] - /(dark)/ Vim's "Zenburn theme" ported to Emacs.
   - [[https://github.com/bbatsov/solarized-emacs][Solarized]] - /(light/dark)/ Solarized color theme.
   - [[https://github.com/doomemacs/themes][Doom-themes]] - /(theme pack)/ UI plugin and pack of themes extracted from Doom Emacs.
   - [[https://github.com/purcell/color-theme-sanityinc-tomorrow][Sanityinc-tomorrow]] - /(light/dark)/ An Emacs version of "Tomorrow-themes".
   - [[https://github.com/oneKelvinSmith/monokai-emacs][Monokai]] - /(dark)/ A port of the popular TextMate theme Monokai.
   - [[https://github.com/n3mo/cyberpunk-theme.el][Cyberpunk-theme]] - /(dark)/ *[256color]* Mostly a direct port of the "Cyberpunk Overtone theme".
   - [[https://github.com/jordonbiondo/ample-theme][Ample-theme]] - /(light/dark)/ *[256color]* A low-contrast theme for Emacs.
   - [[https://github.com/kuanyui/moe-theme.el][Moe-theme]]- /(light/dark)/ *[256color]* A customizable colorful eye-candy theme. Moe, moe, kyun!
   - [[https://github.com/fniessen/emacs-leuven-theme][Leuven-theme]] - =[built-in]= /(light)/ Awesome Emacs color theme for white backgrounds.
   - [[https://framagit.org/steckerhalter/grandshell-theme][Grandshell-theme]] - /(dark)/ *[256color]* Theme with intensive colors.
   - [[https://github.com/kunalb/poet][Poet]] - /(light/dark)/ A lightweight theme that plays well with prose and org-mode.
   - [[https://github.com/ogdenwebb/emacs-kaolin-themes][Kaolin-themes]] - (theme package) Set of eye-pleasing themes for GNU Emacs. Supports both GUI and terminal.
   - [[https://github.com/ianyepan/wilmersdorf-emacs-theme][Wilmersdorf-theme]] - /(dark)/ Emacs theme with dark subtle syntax highlighting.
   - [[https://github.com/ianyepan/tron-legacy-emacs-theme][Tron-Legacy-Theme]] - /(dark)/ Custom theme inspired by Tron: Legacy.
   - [[https://gitlab.com/protesilaos/modus-themes][Modus Themes]] - /(light/dark)/ Accessible themes for GNU Emacs, conforming with the highest accessibility standard for colour contrast between background and foreground values (WCAG AAA standard).
   - [[https://github.com/rougier/nano-theme][N Λ N O (Nano) Themes]] - /(light/dark)/ A light theme based on Material colors and a dark theme based on Nord colors.
   - [[https://github.com/protesilaos/ef-themes][Ef themes]] - /(light/dark)/ - Colourful and legible themes for GNU Emacs.

   #+BEGIN_QUOTE
   The above list contains some of the most popular/installed themes. You can also take a look at [[https://pawelbx.github.io/emacs-theme-gallery/][GNU Emacs Themes Gallery]] for screenshots of almost all available Emacs themes.
   #+END_QUOTE

** Multimedia

   - [[https://www.emacswiki.org/emacs/Mpc][mpc]] - =[built-in]= An Emacs front end to the Music Player Daemon.
   - [[https://www.gnu.org/software/emms/][EMMS]] - The Emacs Multimedia System.
   - [[https://github.com/dbrock/bongo/][Bongo]] - A flexible and usable media player for GNU Emacs.
   - [[https://github.com/nlamirault/dionysos][Dionysos]] - A simple music player for Emacs.
   - [[https://github.com/pft/mingus][Mingus]] - An Emacs front end to the Music Player Daemon with an interface that resembles ncmpc.
   - [[https://github.com/hlolli/csound-mode][csound-mode]] - Emacs major mode for coding in Csound.
   - [[https://github.com/olavfosse/eradio][eradio]] - An Internet radio player.
   - [[https://github.com/ravicious/taggie][taggie]] - Audio tag editor.
   - [[https://github.com/mihaiolteanu/versuri][versuri]] - Lyrics.
   - [[https://github.com/lujun9972/podcaster][podcaster]] - Podcast client.

** Finance

   - [[https://github.com/ledger/ledger-mode][ledger-mode]] - Plain text double-entry accounting in Emacs with [[https://ledger-cli.org/][ledger]].
   - [[https://github.com/narendraj9/hledger-mode][hledger-mode]] - A mode for writing [[https://hledger.org/][hledger]] journals with a set of useful reports.

** Fun

   - [[https://github.com/TeMPOraL/nyan-mode][Nyan-mode]] - Let Nyan Cat show you your buffer position in mode line.
   - [[https://www.emacswiki.org/emacs/ZoneMode][Zone Mode]] - =[built-in]= A buffer obfuscator, or a screensaver.
   - [[https://hg.sr.ht/~zck/minesweeper][minesweeper.el]] - An implementation of minesweeper in emacs.
   - [[https://hg.sr.ht/~zck/game-2048][2048-game.el]] - An implementation of 2048 in emacs.
   - [[https://github.com/vibhavp/emacs-xkcd][emacs-xkcd]] -  Read xkcd from emacs.
   - [[https://github.com/emacsmirror/gnugo][gnugo]] - Play GNU Go in a buffer.
   - [[https://github.com/codingteam/pacmacs.el][Pacmacs]] - Pacman-like game for Emacs.
   - [[https://github.com/dp12/parrot][parrot]] - Rotate text and Party Parrot at the same time.
   - [[https://github.com/dakra/speed-type][speed-type]] - Practice speed/touch typing in Emacs.
   - [[https://gitlab.com/iankelling/spray][spray]] - A speed reading mode for Emacs.
   - [[https://github.com/kuanyui/fsc.el][fsc.el]] - Fuck the Speeching Censorship!
   - [[https://github.com/bcbcarl/emacs-wttrin][wttrin]] - Emacs frontend for weather web service wttr.in.
   - [[https://github.com/johanvts/emacs-fireplace][fireplace]] - A cozy fireplace for emacs.
   - [[https://github.com/Fuco1/clippy.el][clippy]] - Show tooltip with function documentation at point.
   - [[http://elpa.gnu.org/packages/landmark.html][Landmark]] - a neural network that trains a robot to find a tree.
   - [[https://github.com/rbanffy/selectric-mode][Selectric Mode]] - Make your Emacs sound like a proper typewriter.
   - [[https://github.com/federicotdn/key-quiz][key-quiz]] - Key Quiz game for Emacs.

** Music

   - [[https://github.com/mjago/Emacs/tree/master/lilypond][lilypond-mode]] - default emacs mode for [[http://lilypond.org/][lilypond]] editing.
   - [[https://github.com/nsceaux/lyqi][lyqi]] - 3rd party emacs mode for LilyPond editing.
   - [[https://github.com/jgkamat/alda-mode][alda-mode]] - emacs mode for [[https://github.com/alda-lang/alda][alda]], a music programming language for musicians written in java and clojure.
   - [[https://github.com/supercollider/scel][Scel]] - SuperCollider/Emacs interface.
   - [[https://github.com/mihaiolteanu/vuiet][Vuiet]] - The music player and explorer for Emacs.

** Screencasting

   - [[https://github.com/tarsius/keycast][keycast]] - Show current commands and its key in the mode line.
   - [[https://gitlab.com/ambrevar/emacs-gif-screencast][emacs-gif-screencast]] - Record Emacs frames to gifs.
   - [[https://github.com/tarsius/frameshot][frameshot]] - Take screenshots of Emacs frames.
   - [[https://github.com/ffevotte/script2svg][script2svg]] - Record terminal sessions as svg.

** Starter Kit

   - [[https://github.com/syl20bnr/spacemacs][Spacemacs]] - A slick Evil focused starter kit: do not fear RSI anymore.
   - [[https://github.com/purcell/emacs.d][Purcell's .emacs.d]] - An Emacs configuration bundle with batteries included.
   - [[https://github.com/bbatsov/prelude][Prelude]] - Prelude is an enhanced Emacs 24 distribution that should make your experience with Emacs both more pleasant and more powerful.
   - [[https://github.com/doomemacs/doomemacs][Doom]] - Henrik Lissner's (@hlissner) Emacs configuration for the stubborn martian vimmer.
   - [[https://github.com/seagle0128/.emacs.d][Centaur Emacs]] - A Fancy and Fast Emacs Configuration.
   - [[https://github.com/thefrontside/frontmacs][Frontmacs]] - A package-based, web-centric, customizable, awesome-by-default, acceptance-tested Emacs distribution.
   - [[https://github.com/jkitchin/scimax][Scimax]] - An Emacs starter kit for scientists and engineers with a focus on Org-Mode.
   - [[https://github.com/overtone/emacs-live][Emacs-Live]] - M-x start-hacking http://overtone.github.io/emacs-live/.
   - [[https://github.com/bodil/ohai-emacs][Ohai Emacs]] - The finest hand-crafted artisanal emacs.d for your editing pleasure.
   - [[https://github.com/rdallasgray/graphene][Graphene]] - A set of defaults for Emacs, for refugees from GUI text editors.
   - [[https://github.com/editor-bootstrap/emacs-bootstrap][Emacs Bootstrap]] - Your on-the-fly Emacs development environment!
   - [[https://github.com/ianyepan/yay-evil-emacs][Ian's Yay-Evil Distro]] - A lightweight literate Emacs config with even better "better defaults": shipped with a custom theme!
   - [[https://github.com/eschulte/emacs24-starter-kit][Emacs24 Starter Kit]] - A cleaner version of the literate starter kit based on Emacs24 http://eschulte.github.io/emacs24-starter-kit/.
   - [[https://git.sr.ht/~technomancy/better-defaults][better-defaults]] - A small number of better defaults for Emacs.
   - [[https://github.com/xiaohanyu/oh-my-emacs][Oh-My-Emacs]] - Provide an awesome, out-of-box, literate dotemacs for both newbies and nerds.
   - [[https://github.com/senny/cabbage][Cabbage]] - Get the maximum out of emacs http://senny.github.io/cabbage/.
   - [[https://github.com/daviwil/emacs-from-scratch][Emacs From Scratch]] - Custom Emacs configuration that you can use as inspiration when building your own.
   - [[https://github.com/technomancy/emacs-starter-kit][Emacs Starter Kit]] - A prose guide to various packages and settings which can greatly improve the Emacs experience.
   - [[https://github.com/jamescherti/minimal-emacs.d][minimal-emacs.d]] - A customizable Emacs base that offers improved default settings and optimized startup, intended to serve as a solid foundation for a vanilla Emacs configuration.
   - [[https://codeberg.org/ashton314/emacs-bedrock][Emacs Bedrock]] - A minimal, no-magic, bare-bones starter kit focusing on tweaking stock Emacs 29. Minimal 3rd-party dependencies.

#+BEGIN_QUOTE
- In addition, for an excellent selection of personal .emacs.d configurations, take a look at [[https://github.com/caisah/emacs.dz]].
#+END_QUOTE

** Tutorials

   - [[https://www.gnu.org/software/emacs/tour/][A Guided Tour of Emacs]] - An official guided tour of Emacs.
   - [[https://github.com/pierre-lecocq/emacs4developers][Emacs for developers]] -  A document to help developers to use Emacs as a developer.
   - [[https://therandymon.com/woodnotes/emacs-for-writers/emacs-for-writers.html][Emacs for writers]] - The Woodnotes Guide to Emacs for Writers.
   - [[https://cestlaz.github.io/stories/emacs/][C'est la Z - Using Emacs Series]] - A series of beginner-friendly Emacs tutorials by Mike Zamansky (@zamansky).
   - [[https://caiorss.github.io/Emacs-Elisp-Programming/][Emacs In a Box]] - A tutorial for emacs lisp and emacs customization.
   - [[https://www.youtube.com/watch?v=rCMh7srOqvw&list=PLhXZp00uXBk4np17N39WvB80zgxlZfVwj][Emacs Doom Screencast]] - A video tutorial for emacs doom made by @zaiste.
   - [[https://github.com/jtmoulia/elisp-koans][elisp-koans]] - A tour of emacs lisp via test-driven development.
   - [[https://www.youtube.com/playlist?list=PLEoMzSkcN8oPH1au7H6B7bBJ4ZO7BXjSZ ][Emacs From Scratch]] - A series of videos showing how to build an advanced Emacs configuration from scratch by David Wilson ([[https://github.com/daviwil][@daviwil]]).


** Links and resources

   - [[https://www.emacswiki.org/][EmacsWiki]] - The EmacsWiki is dedicated to documenting and discussing Emacs and EmacsLisp.
   - [[https://www.reddit.com/r/emacs/][Emacs subreddit]] - The reddit Emacs channel.
   - [[https://planet.emacslife.com/][Planet Emacsen]] - A community driven mashup of Emacs articles.
   - [[https://sachachua.com/blog/emacs/][Living an Awesome Life - Emacs]] - Sacha Chua's (@sachac) extensive blog posts featuring Emacs.
   - [[http://oremacs.com/][(or emacs]] - An (ir)relevant blog about Emacs.
   - [[https://emacsredux.com/][Emacs Redux]] - Return to the Essence of Text Editing.
   - [[https://emacsrocks.com/][Emacs Rocks]] - Some episodes to prove that Emacs rocks.
   - [[https://www.masteringemacs.org/][Mastering Emacs]] - Mastering the world’s best text editor.
   - [[http://endlessparentheses.com/][Endless Parentheses]] - Concise ramblings on Emacs productivity.
   - [[http://whattheemacsd.com/][What the .emacs.d!?]] - Sharing Emacs snippets and pastes with others.
   - [[https://hackr.io/tutorials/learn-emacs][Community Curated Emacs Resources]] - Top Recommended Resources.
   - [[https://github.com/p3r7/awesome-elisp][awesome-elisp]] - An awesome list for Elisp development.
   - [[https://github.com/alphapapa/emacs-package-dev-handbook][emacs-package-dev-handbook]] - A handbook for package developers.
   - [[http://ergoemacs.org/index.html][ErgoEmacs]] - Emacs/Emacs Lisp tutorials.
   - [[https://emacsdocs.org/][Emacs Docs]] - The modern documentation website Emacs deserves.

* Contributing

*Your contributions are always welcome!* Please submit a pull request or create an issue to add a new package, library, or software to the list.

Before contributing, please read this tiny guideline:

** The Order of Items

*Please don't rearrange the package ordering without any reason!* The items should be sorted by its popularity ( /roughly, because it's impossible to have a precise standard./ e.g. _most people would use it_; _recommended for every newbie_...), instead of your personal preference.

For example, =Evil= is obviously not a package that every Emacser needs. So please don't move it to the top of its category.

In contrast, if you think a package is recommended for every Emacser (especially for a newbie), just place it at a higher place in the list.

** Emacs Built-In Packages
If a package is available in the latest version of Emacs, please remember to add a =[built-in]= tag in the front of the description.

** Generate "Table of Contents"

It is recommended to install [[https://melpa.org/#/toc-org][toc-org]] which will update the Table Of Contents for
you automatically on each save. It will also give you convenient navigation -
if you press =C-c C-o= (=org-open-at-point=) when the point is on the entry in
the Table Of Contents, you will jump to the respective section.

If for some reason, you don't want to install it, you can download a single
file [[https://github.com/snosov1/toc-org/blob/master/toc-org.el][toc-org.el]] manually, open it, and call =M-x eval-buffer=.

Then change buffers to =README.org=. Subsequently, issue =M-x
toc-org-insert-toc= within the =README.org= buffer. If a new category of packages
has been added in your commit, the Table of Contents section will be revised and
updated.

* Other Awesome Lists

A curated list of awesome lists can be found at [[https://awesome.re][awesome.re]].

* License

[[https://creativecommons.org/publicdomain/zero/1.0/][https://licensebuttons.net/p/zero/1.0/88x31.png]]

To the extent possible under law, [[https://github.com/emacs-tw][emacs.tw]] has waived all copyright and related or neighboring rights to this work.
